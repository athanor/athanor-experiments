language ESSENCE' 1.0

given numberLocations: int(1..)
given fin1: int
given fin2: int
given orderWeights_Function1D: matrix indexed by [int(1..numberLocations)] of int(1..fin2)
given fin3: int
given fin4: int
given costs_FunctionND: matrix indexed by [int(0..numberLocations), int(0..numberLocations)] of int(0..fin4)
given vehicleCapacity: int(1..)
letting maxTotalCost be sum([costs_FunctionND[0, i] | i : int(1..numberLocations)]) * 2
letting totalOrderWeight be sum([orderWeights_Function1D[q260] | q260 : int(1..numberLocations)])
letting minVehicles be totalOrderWeight / vehicleCapacity + toInt(totalOrderWeight % vehicleCapacity != 0)
find plan_ExplicitVarSizeWithMarkerR15_Marker: int(0..numberLocations)
find incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker: int(0..numberLocations)
find plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length:
        matrix indexed by [int(1..numberLocations)] of int(0..numberLocations)
find incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length:
        matrix indexed by [int(1..numberLocations)] of int(0..numberLocations)
find plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values:
        matrix indexed by [int(1..numberLocations), int(1..numberLocations)] of int(1..numberLocations)
find incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values:
        matrix indexed by [int(1..numberLocations), int(1..numberLocations)] of int(1..numberLocations)
find optVar: int(0..maxTotalCost)
branching on
    [plan_ExplicitVarSizeWithMarkerR15_Marker, plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length,
     plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values, optVar]
SNSGroup plan_neighbourhoodGroup :
    [plan_ExplicitVarSizeWithMarkerR15_Marker, plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length,
     plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values]
find plan_setAddSingle_conjure_aux38: int(1..numberLocations)
find plan_setAddSingle_conjure_aux39: int(1..numberLocations)
find plan_setAddSingle_conjure_aux40: int(1..numberLocations)
find plan_setAddSingle_activation: bool
find plan_setAddSingle_size: int(1..numberLocations)
SNSNeighbourhood plan_setAddSingle :
    (plan_setAddSingle_size, plan_setAddSingle_activation, plan_neighbourhoodGroup,
     [plan_setAddSingle_conjure_aux38, plan_setAddSingle_conjure_aux39, plan_setAddSingle_conjure_aux40])
find plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverAny_activation: bool
find plan_setLiftMultiple_sequenceCrossOverAny_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceCrossOverAny :
    (plan_setLiftMultiple_sequenceCrossOverAny_size, plan_setLiftMultiple_sequenceCrossOverAny_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41, plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42,
      plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43, plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44])
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_activation: bool
find plan_setLiftMultiple_sequenceCrossOverSub_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceCrossOverSub :
    (plan_setLiftMultiple_sequenceCrossOverSub_size, plan_setLiftMultiple_sequenceCrossOverSub_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8, plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9,
      plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45, plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46,
      plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47, plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48])
find plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49: int(1..numberLocations)
find plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50: int(1..numberLocations)
find plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51: int(1..numberLocations)
find plan_setLiftMultiple_sequenceMergeLeftOrRight_activation: bool
find plan_setLiftMultiple_sequenceMergeLeftOrRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceMergeLeftOrRight :
    (plan_setLiftMultiple_sequenceMergeLeftOrRight_size, plan_setLiftMultiple_sequenceMergeLeftOrRight_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49,
      plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50,
      plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51])
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation: bool
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight :
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size,
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation, plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52,
      plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53,
      plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54,
      plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55])
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation: bool
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight :
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size,
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation, plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56,
      plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57,
      plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58,
      plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59])
find plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60: int(1..numberLocations)
find plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61: int(1..numberLocations)
find plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62: int(1..numberLocations)
find plan_setLiftMultiple_sequenceSplitLeftOrRight_activation: bool
find plan_setLiftMultiple_sequenceSplitLeftOrRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceSplitLeftOrRight :
    (plan_setLiftMultiple_sequenceSplitLeftOrRight_size, plan_setLiftMultiple_sequenceSplitLeftOrRight_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60,
      plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61,
      plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62])
find plan_setLiftSingle_sequenceAddLeft_conjure_aux63: int(1..numberLocations)
find plan_setLiftSingle_sequenceAddLeft_conjure_aux64: int(1..numberLocations)
find plan_setLiftSingle_sequenceAddLeft_activation: bool
find plan_setLiftSingle_sequenceAddLeft_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceAddLeft :
    (plan_setLiftSingle_sequenceAddLeft_size, plan_setLiftSingle_sequenceAddLeft_activation, plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceAddLeft_conjure_aux63, plan_setLiftSingle_sequenceAddLeft_conjure_aux64])
find plan_setLiftSingle_sequenceAddRight_conjure_aux65: int(1..numberLocations)
find plan_setLiftSingle_sequenceAddRight_conjure_aux66: int(1..numberLocations)
find plan_setLiftSingle_sequenceAddRight_activation: bool
find plan_setLiftSingle_sequenceAddRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceAddRight :
    (plan_setLiftSingle_sequenceAddRight_size, plan_setLiftSingle_sequenceAddRight_activation, plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceAddRight_conjure_aux65, plan_setLiftSingle_sequenceAddRight_conjure_aux66])
find plan_setLiftSingle_sequenceAnySwap_conjure_aux67: int(1..numberLocations)
find plan_setLiftSingle_sequenceAnySwap_conjure_aux68: int(1..numberLocations)
find plan_setLiftSingle_sequenceAnySwap_activation: bool
find plan_setLiftSingle_sequenceAnySwap_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceAnySwap :
    (plan_setLiftSingle_sequenceAnySwap_size, plan_setLiftSingle_sequenceAnySwap_activation, plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceAnySwap_conjure_aux67, plan_setLiftSingle_sequenceAnySwap_conjure_aux68])
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux5: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux6: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux7: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux69: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux70: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_activation: bool
find plan_setLiftSingle_sequenceRelaxSub_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRelaxSub :
    (plan_setLiftSingle_sequenceRelaxSub_size, plan_setLiftSingle_sequenceRelaxSub_activation, plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRelaxSub_conjure_aux5, plan_setLiftSingle_sequenceRelaxSub_conjure_aux6,
      plan_setLiftSingle_sequenceRelaxSub_conjure_aux7, plan_setLiftSingle_sequenceRelaxSub_conjure_aux69,
      plan_setLiftSingle_sequenceRelaxSub_conjure_aux70])
find plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71: int(1..numberLocations)
find plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72: int(1..numberLocations)
find plan_setLiftSingle_sequenceRemoveLeft_activation: bool
find plan_setLiftSingle_sequenceRemoveLeft_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRemoveLeft :
    (plan_setLiftSingle_sequenceRemoveLeft_size, plan_setLiftSingle_sequenceRemoveLeft_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71, plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72])
find plan_setLiftSingle_sequenceRemoveRight_conjure_aux73: int(1..numberLocations)
find plan_setLiftSingle_sequenceRemoveRight_conjure_aux74: int(1..numberLocations)
find plan_setLiftSingle_sequenceRemoveRight_activation: bool
find plan_setLiftSingle_sequenceRemoveRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRemoveRight :
    (plan_setLiftSingle_sequenceRemoveRight_size, plan_setLiftSingle_sequenceRemoveRight_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRemoveRight_conjure_aux73, plan_setLiftSingle_sequenceRemoveRight_conjure_aux74])
find plan_setLiftSingle_sequenceReverseSub_conjure_aux3: int(1..numberLocations)
find plan_setLiftSingle_sequenceReverseSub_conjure_aux4: int(1..numberLocations)
find plan_setLiftSingle_sequenceReverseSub_conjure_aux75: int(1..numberLocations)
find plan_setLiftSingle_sequenceReverseSub_conjure_aux76: int(1..numberLocations)
find plan_setLiftSingle_sequenceReverseSub_activation: bool
find plan_setLiftSingle_sequenceReverseSub_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceReverseSub :
    (plan_setLiftSingle_sequenceReverseSub_size, plan_setLiftSingle_sequenceReverseSub_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceReverseSub_conjure_aux3, plan_setLiftSingle_sequenceReverseSub_conjure_aux4,
      plan_setLiftSingle_sequenceReverseSub_conjure_aux75, plan_setLiftSingle_sequenceReverseSub_conjure_aux76])
find plan_setLiftSingle_sequenceRotateLeft_conjure_aux77: int(1..numberLocations)
find plan_setLiftSingle_sequenceRotateLeft_conjure_aux78: int(1..numberLocations)
find plan_setLiftSingle_sequenceRotateLeft_activation: bool
find plan_setLiftSingle_sequenceRotateLeft_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRotateLeft :
    (plan_setLiftSingle_sequenceRotateLeft_size, plan_setLiftSingle_sequenceRotateLeft_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77, plan_setLiftSingle_sequenceRotateLeft_conjure_aux78])
find plan_setLiftSingle_sequenceRotateRight_conjure_aux79: int(1..numberLocations)
find plan_setLiftSingle_sequenceRotateRight_conjure_aux80: int(1..numberLocations)
find plan_setLiftSingle_sequenceRotateRight_activation: bool
find plan_setLiftSingle_sequenceRotateRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRotateRight :
    (plan_setLiftSingle_sequenceRotateRight_size, plan_setLiftSingle_sequenceRotateRight_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRotateRight_conjure_aux79, plan_setLiftSingle_sequenceRotateRight_conjure_aux80])
find plan_setRemoveSingle_conjure_aux81: int(1..numberLocations)
find plan_setRemoveSingle_conjure_aux82: int(1..numberLocations)
find plan_setRemoveSingle_conjure_aux83: int(1..numberLocations)
find plan_setRemoveSingle_activation: bool
find plan_setRemoveSingle_size: int(1..numberLocations)
SNSNeighbourhood plan_setRemoveSingle :
    (plan_setRemoveSingle_size, plan_setRemoveSingle_activation, plan_neighbourhoodGroup,
     [plan_setRemoveSingle_conjure_aux81, plan_setRemoveSingle_conjure_aux82, plan_setRemoveSingle_conjure_aux83])
SNSIncumbentMapping([plan_ExplicitVarSizeWithMarkerR15_Marker,
                     plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length,
                     plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values],
                    [incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
                     incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length,
                     incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values])
minimising optVar
such that
    optVar =
    sum([toInt(q31 <= plan_ExplicitVarSizeWithMarkerR15_Marker) *
         catchUndef(sum([toInt(q1 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q31]) *
                         catchUndef(costs_FunctionND
                                        [plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q31, q1 - 1],
                                         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q31, q1]],
                                    0)
                             | q1 : int(2..numberLocations)])
                    + costs_FunctionND[0, plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q31, 1]]
                    +
                    costs_FunctionND
                        [plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                             [q31, plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q31]],
                         0],
                    0)
             | q31 : int(1..numberLocations)]),
    and([q31 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
         and([q1 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q31] ->
              q1 - 1 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q31]
                  | q1 : int(2..numberLocations)])
             | q31 : int(1..numberLocations)]),
    and([q31 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
         and([q1 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q31] ->
              q1 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q31]
                  | q1 : int(2..numberLocations)])
             | q31 : int(1..numberLocations)]),
    and([q31 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
         1 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q31]
             | q31 : int(1..numberLocations)]),
    and([q31 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q31] <=
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q31]
             | q31 : int(1..numberLocations)]),
    and([q33 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
         sum([toInt(q35 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q33]) *
              catchUndef(orderWeights_Function1D
                             [plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q33, q35]],
                         0)
                  | q35 : int(1..numberLocations)])
         <= vehicleCapacity
             | q33 : int(1..numberLocations)]),
    alldifferent_except([toInt(q39 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q37] /\
                               q37 <= plan_ExplicitVarSizeWithMarkerR15_Marker)
                         * catchUndef(plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q37, q39], 0)
                             | q37 : int(1..numberLocations), q39 : int(1..numberLocations)],
                        0),
    sum([toInt(q41 <= plan_ExplicitVarSizeWithMarkerR15_Marker) *
         catchUndef(plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q41], 0)
             | q41 : int(1..numberLocations)])
    = numberLocations,
    plan_setAddSingle_activation -> allDiff([plan_setAddSingle_conjure_aux38; int(1)]),
    plan_setAddSingle_activation ->
    plan_setAddSingle_conjure_aux38 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setAddSingle_activation ->
    allDiff([plan_setAddSingle_conjure_aux39, plan_setAddSingle_conjure_aux40; int(1..2)]),
    plan_setAddSingle_activation ->
    plan_setAddSingle_conjure_aux39 <= plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setAddSingle_conjure_aux40 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setAddSingle_activation ->
    and([q43 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\ !(q43 = plan_setAddSingle_conjure_aux38) ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q43] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q43]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q43, q48] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q43, q48]
                  | q48 : int(1..numberLocations)])
             | q43 : int(1..numberLocations)]),
    plan_setAddSingle_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux39] =
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux38]
    /\
    and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[plan_setAddSingle_conjure_aux39, q50] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[plan_setAddSingle_conjure_aux38, q50]
             | q50 : int(1..numberLocations)])
    /\
    plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux40] =
    plan_setAddSingle_size,
    plan_setAddSingle_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker + 1,
    plan_setAddSingle_activation ->
    plan_setAddSingle_conjure_aux39 = plan_setAddSingle_conjure_aux38 \/
    plan_setAddSingle_conjure_aux40 = plan_setAddSingle_conjure_aux38,
    plan_setAddSingle_activation -> true,
    !plan_setAddSingle_activation ->
    and([plan_setAddSingle_size = 1, plan_setAddSingle_conjure_aux38 = 1, plan_setAddSingle_conjure_aux39 = 1,
         plan_setAddSingle_conjure_aux40 = 1;
             int(1..4)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    allDiff([plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41,
             plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    allDiff([plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43,
             plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43 <= plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    and([q53 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q53 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 \/
           q53 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q53] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q53]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q53, q66] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q53, q66]
                  | q66 : int(1..numberLocations)])
             | q53 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    plan_setLiftMultiple_sequenceCrossOverAny_size =
    sum([toInt(q18 <=
               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41]
               /\
               q18 <=
               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42])
         *
         catchUndef(toInt(and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43, q18]
                               =
                               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42, q18],
                               q18 <=
                               plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43],
                               q18 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42];
                                   int(1..3)])
                          /\
                          and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44, q18]
                               =
                               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41, q18],
                               q18 <=
                               plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44],
                               q18 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41];
                                   int(1..3)])
                          /\
                          and([incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41, q18]
                               !=
                               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42, q18],
                               q18 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41],
                               q18 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42];
                                   int(1..3)])),
                    0)
             | q18 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    (plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41
     \/
     plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41)
    /\
    (plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42
     \/
     plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    (plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43
     \/
     plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43)
    /\
    (plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44
     \/
     plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44),
    plan_setLiftMultiple_sequenceCrossOverAny_activation -> true,
    !plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    and([plan_setLiftMultiple_sequenceCrossOverAny_size = 1,
         plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 = 1,
         plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42 = 1,
         plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43 = 1,
         plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44 = 1;
             int(1..5)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    allDiff([plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45,
             plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    allDiff([plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47,
             plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47 <= plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    and([q69 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q69 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 \/
           q69 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q69] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q69]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q69, q82] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q69, q82]
                  | q82 : int(1..numberLocations)])
             | q69 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    and([plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9 - plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8
         = plan_setLiftMultiple_sequenceCrossOverSub_size,
         and([and([q17 < plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8,
                   q17 > plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9,
                   q17 <
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45],
                   q17 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46];
                       int(1..4)])
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47, q17]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45, q17],
                   q17 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47],
                   q17 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45];
                       int(1..3)])
              /\
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48, q17]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46, q17],
                   q17 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48],
                   q17 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46];
                       int(1..3)])
                  | q17 : int(1..numberLocations)]),
         and([q17 >= plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8 /\
              q17 <= plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47, q17]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46, q17],
                   q17 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47],
                   q17 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46];
                       int(1..3)])
              /\
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48, q17]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45, q17],
                   q17 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48],
                   q17 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45];
                       int(1..3)])
                  | q17 : int(1..numberLocations)]);
             int(1..3)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    (plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45
     \/
     plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45)
    /\
    (plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46
     \/
     plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    (plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47
     \/
     plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47)
    /\
    (plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48
     \/
     plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48),
    plan_setLiftMultiple_sequenceCrossOverSub_activation -> true,
    !plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    and([plan_setLiftMultiple_sequenceCrossOverSub_size = 1, plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48 = 1;
             int(1..7)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49,
             plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51; int(1)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    and([q85 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q85 = plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49 \/
           q85 = plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q85] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q85]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q85, q90] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q85, q90]
                  | q90 : int(1..numberLocations)])
             | q85 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49]
         +
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50],
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49]
         = plan_setLiftMultiple_sequenceMergeLeftOrRight_size,
         and([q15 <= plan_setLiftMultiple_sequenceMergeLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51, q15]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49, q15],
                   q15 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51],
                   q15 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49];
                       int(1..3)])
                  | q15 : int(1..numberLocations)])
         /\
         and([q15 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51,
                        q15 + plan_setLiftMultiple_sequenceMergeLeftOrRight_size]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50, q15],
                   q15 + plan_setLiftMultiple_sequenceMergeLeftOrRight_size <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51],
                   q15 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50];
                       int(1..3)])
                  | q15 : int(1..numberLocations)])
         \/
         and([q15 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51, q15]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50, q15],
                   q15 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51],
                   q15 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50];
                       int(1..3)])
                  | q15 : int(1..numberLocations)])
         /\
         and([q15 <= plan_setLiftMultiple_sequenceMergeLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51,
                        q15 +
                        incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                            [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50]]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49, q15],
                   q15 +
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50]
                   <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51],
                   q15 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49];
                       int(1..3)])
                  | q15 : int(1..numberLocations)]);
             int(1..3)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker + -1,
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49 =
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51
    \/
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50 =
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51,
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation -> true,
    !plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    and([plan_setLiftMultiple_sequenceMergeLeftOrRight_size = 1,
         plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49 = 1,
         plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50 = 1,
         plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51 = 1;
             int(1..4)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52,
             plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 <=
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker
    /\
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53 <=
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54,
             plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54 <= plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    and([q93 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q93 = plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 \/
           q93 = plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q93] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q93]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q93, q106] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q93, q106]
                  | q106 : int(1..numberLocations)])
             | q93 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52]
         - plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size,
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
         + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size,
         and([q13 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54, q13]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52,
                        q13 + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size],
                   q13 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54],
                   q13 + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52];
                       int(1..3)])
                  | q13 : int(1..numberLocations)]),
         and([q13 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55, q13]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53, q13],
                   q13 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55],
                   q13 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53];
                       int(1..3)])
                  | q13 : int(1..numberLocations)])
         /\
         and([q13 <= plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55,
                        incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                            [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
                        + q13]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52, q13],
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
                   + q13
                   <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55],
                   q13 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52];
                       int(1..3)])
                  | q13 : int(1..numberLocations)])
         \/
         and([q13 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55,
                        q13 + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53, q13],
                   q13 + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55],
                   q13 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53];
                       int(1..3)])
                  | q13 : int(1..numberLocations)])
         /\
         and([q13 <= plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55, q13]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52, q13],
                   q13 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55],
                   q13 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52];
                       int(1..3)])
                  | q13 : int(1..numberLocations)]);
             int(1..4)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52
     \/
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52)
    /\
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53
     \/
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54
     \/
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54)
    /\
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55
     \/
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation -> true,
    !plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    and([plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size = 1,
         plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 = 1,
         plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53 = 1,
         plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54 = 1,
         plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55 = 1;
             int(1..5)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56,
             plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 <=
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker
    /\
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57 <=
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58,
             plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58 <= plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    and([q109 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q109 = plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 \/
           q109 = plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q109] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q109]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q109, q122] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q109, q122]
                  | q122 : int(1..numberLocations)])
             | q109 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56]
         - plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size,
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57]
         + plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size,
         and([q14 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58, q14]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56, q14],
                   q14 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58],
                   q14 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56];
                       int(1..3)])
                  | q14 : int(1..numberLocations)]),
         and([q14 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59, q14]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57, q14],
                   q14 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59],
                   q14 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57];
                       int(1..3)])
                  | q14 : int(1..numberLocations)])
         /\
         and([q14 >
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
              /\
              q14 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59, q14]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56, q14],
                   q14 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59],
                   q14 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56];
                       int(1..3)])
                  | q14 : int(1..numberLocations)])
         \/
         and([q14 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59,
                        q14 + plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57, q14],
                   q14 + plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59],
                   q14 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57];
                       int(1..3)])
                  | q14 : int(1..numberLocations)])
         /\
         and([q14 <= plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59, q14]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56,
                        plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                            [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
                        + q14],
                   q14 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59],
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
                   + q14
                   <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56];
                       int(1..3)])
                  | q14 : int(1..numberLocations)]);
             int(1..4)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56
     \/
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56)
    /\
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57
     \/
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58
     \/
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58)
    /\
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59
     \/
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation -> true,
    !plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    and([plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size = 1,
         plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 = 1,
         plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57 = 1,
         plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58 = 1,
         plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59 = 1;
             int(1..5)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60; int(1)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61,
             plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61 <= plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    and([q125 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q125 = plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q125] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q125]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q125, q130] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q125, q130]
                  | q130 : int(1..numberLocations)])
             | q125 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60]
         - plan_setLiftMultiple_sequenceSplitLeftOrRight_size,
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62]
         = plan_setLiftMultiple_sequenceSplitLeftOrRight_size,
         and([q16 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61, q16]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60,
                        q16 + plan_setLiftMultiple_sequenceSplitLeftOrRight_size],
                   q16 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61],
                   q16 + plan_setLiftMultiple_sequenceSplitLeftOrRight_size <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60];
                       int(1..3)])
                  | q16 : int(1..numberLocations)])
         /\
         and([q16 <= plan_setLiftMultiple_sequenceSplitLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62, q16]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60, q16],
                   q16 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62],
                   q16 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60];
                       int(1..3)])
                  | q16 : int(1..numberLocations)])
         \/
         and([q16 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61, q16]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60, q16],
                   q16 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61],
                   q16 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60];
                       int(1..3)])
                  | q16 : int(1..numberLocations)])
         /\
         and([q16 <= plan_setLiftMultiple_sequenceSplitLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62, q16]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60,
                        q16 +
                        plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                            [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]],
                   q16 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62],
                   q16 +
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]
                   <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60];
                       int(1..3)])
                  | q16 : int(1..numberLocations)]);
             int(1..3)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker + 1,
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61 =
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60
    \/
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62 =
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60,
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation -> true,
    !plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    and([plan_setLiftMultiple_sequenceSplitLeftOrRight_size = 1,
         plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60 = 1,
         plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61 = 1,
         plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62 = 1;
             int(1..4)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceAddLeft_conjure_aux63; int(1)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_setLiftSingle_sequenceAddLeft_conjure_aux63 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceAddLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceAddLeft_conjure_aux64; int(1)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_setLiftSingle_sequenceAddLeft_conjure_aux64 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceAddLeft_activation ->
    and([q133 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q133 = plan_setLiftSingle_sequenceAddLeft_conjure_aux63)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q133] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q133]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q133, q142] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q133, q142]
                  | q142 : int(1..numberLocations)])
             | q133 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[plan_setLiftSingle_sequenceAddLeft_conjure_aux64] =
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceAddLeft_conjure_aux63]
    + plan_setLiftSingle_sequenceAddLeft_size
    /\
    and([q10 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceAddLeft_conjure_aux63]
         ->
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceAddLeft_conjure_aux64, q10 + plan_setLiftSingle_sequenceAddLeft_size]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceAddLeft_conjure_aux63, q10],
              q10 + plan_setLiftSingle_sequenceAddLeft_size <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceAddLeft_conjure_aux64],
              q10 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceAddLeft_conjure_aux63];
                  int(1..3)])
             | q10 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_setLiftSingle_sequenceAddLeft_conjure_aux64 = plan_setLiftSingle_sequenceAddLeft_conjure_aux63,
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_setLiftSingle_sequenceAddLeft_conjure_aux63 = plan_setLiftSingle_sequenceAddLeft_conjure_aux64,
    plan_setLiftSingle_sequenceAddLeft_activation -> true,
    !plan_setLiftSingle_sequenceAddLeft_activation ->
    and([plan_setLiftSingle_sequenceAddLeft_size = 1, plan_setLiftSingle_sequenceAddLeft_conjure_aux63 = 1,
         plan_setLiftSingle_sequenceAddLeft_conjure_aux64 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceAddRight_activation ->
    allDiff([plan_setLiftSingle_sequenceAddRight_conjure_aux65; int(1)]),
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_setLiftSingle_sequenceAddRight_conjure_aux65 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceAddRight_activation ->
    allDiff([plan_setLiftSingle_sequenceAddRight_conjure_aux66; int(1)]),
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_setLiftSingle_sequenceAddRight_conjure_aux66 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceAddRight_activation ->
    and([q145 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q145 = plan_setLiftSingle_sequenceAddRight_conjure_aux65)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q145] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q145]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q145, q154] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q145, q154]
                  | q154 : int(1..numberLocations)])
             | q145 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAddRight_activation ->
    and([q9 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceAddRight_conjure_aux65]
         ->
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceAddRight_conjure_aux66, q9]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceAddRight_conjure_aux65, q9],
              q9 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceAddRight_conjure_aux66],
              q9 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceAddRight_conjure_aux65];
                  int(1..3)])
             | q9 : int(1..numberLocations)])
    /\
    plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[plan_setLiftSingle_sequenceAddRight_conjure_aux66] =
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceAddRight_conjure_aux65]
    + plan_setLiftSingle_sequenceAddRight_size,
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_setLiftSingle_sequenceAddRight_conjure_aux66 = plan_setLiftSingle_sequenceAddRight_conjure_aux65,
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_setLiftSingle_sequenceAddRight_conjure_aux65 = plan_setLiftSingle_sequenceAddRight_conjure_aux66,
    plan_setLiftSingle_sequenceAddRight_activation -> true,
    !plan_setLiftSingle_sequenceAddRight_activation ->
    and([plan_setLiftSingle_sequenceAddRight_size = 1, plan_setLiftSingle_sequenceAddRight_conjure_aux65 = 1,
         plan_setLiftSingle_sequenceAddRight_conjure_aux66 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    allDiff([plan_setLiftSingle_sequenceAnySwap_conjure_aux67; int(1)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_conjure_aux67 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceAnySwap_activation ->
    allDiff([plan_setLiftSingle_sequenceAnySwap_conjure_aux68; int(1)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_conjure_aux68 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceAnySwap_activation ->
    and([q157 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q157 = plan_setLiftSingle_sequenceAnySwap_conjure_aux67)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q157] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q157]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q157, q166] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q157, q166]
                  | q166 : int(1..numberLocations)])
             | q157 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_size * 2 =
    sum([toInt(q5 <=
               plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux68])
         *
         catchUndef(toInt(and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux68, q5]
                               !=
                               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux67, q5],
                               q5 <=
                               plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux68],
                               q5 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux67];
                                   int(1..3)])),
                    0)
             | q5 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_conjure_aux68 = plan_setLiftSingle_sequenceAnySwap_conjure_aux67,
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_conjure_aux67 = plan_setLiftSingle_sequenceAnySwap_conjure_aux68,
    plan_setLiftSingle_sequenceAnySwap_activation -> true,
    !plan_setLiftSingle_sequenceAnySwap_activation ->
    and([plan_setLiftSingle_sequenceAnySwap_size = 1, plan_setLiftSingle_sequenceAnySwap_conjure_aux67 = 1,
         plan_setLiftSingle_sequenceAnySwap_conjure_aux68 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    allDiff([plan_setLiftSingle_sequenceRelaxSub_conjure_aux69; int(1)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_setLiftSingle_sequenceRelaxSub_conjure_aux69 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    allDiff([plan_setLiftSingle_sequenceRelaxSub_conjure_aux70; int(1)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_setLiftSingle_sequenceRelaxSub_conjure_aux70 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    and([q172 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q172 = plan_setLiftSingle_sequenceRelaxSub_conjure_aux69)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q172] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q172]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q172, q181] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q172, q181]
                  | q181 : int(1..numberLocations)])
             | q172 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    and([plan_setLiftSingle_sequenceRelaxSub_conjure_aux6 - plan_setLiftSingle_sequenceRelaxSub_conjure_aux5 =
         plan_setLiftSingle_sequenceRelaxSub_size,
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux5 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69],
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux6 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69],
         and([q6 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70]
              /\
              (q6 < plan_setLiftSingle_sequenceRelaxSub_conjure_aux5 \/
               q6 > plan_setLiftSingle_sequenceRelaxSub_conjure_aux6)
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70, q6]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69, q6],
                   q6 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70],
                   q6 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69];
                       int(1..3)])
                  | q6 : int(1..numberLocations)]),
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 >= plan_setLiftSingle_sequenceRelaxSub_conjure_aux5,
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 <= plan_setLiftSingle_sequenceRelaxSub_conjure_aux6,
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70, plan_setLiftSingle_sequenceRelaxSub_conjure_aux7]
              !=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69, plan_setLiftSingle_sequenceRelaxSub_conjure_aux7],
              plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70],
              plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69];
                  int(1..3)]);
             int(1..7)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_setLiftSingle_sequenceRelaxSub_conjure_aux70 = plan_setLiftSingle_sequenceRelaxSub_conjure_aux69,
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_setLiftSingle_sequenceRelaxSub_conjure_aux69 = plan_setLiftSingle_sequenceRelaxSub_conjure_aux70,
    plan_setLiftSingle_sequenceRelaxSub_activation -> true,
    !plan_setLiftSingle_sequenceRelaxSub_activation ->
    and([plan_setLiftSingle_sequenceRelaxSub_size = 1, plan_setLiftSingle_sequenceRelaxSub_conjure_aux5 = 1,
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux6 = 1, plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 = 1,
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux69 = 1, plan_setLiftSingle_sequenceRelaxSub_conjure_aux70 = 1;
             int(1..6)]),
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71; int(1)]),
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72; int(1)]),
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    and([q183 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q183 = plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q183] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q183]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q183, q192] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q183, q192]
                  | q192 : int(1..numberLocations)])
             | q183 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    and([q12 <=
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72]
         ->
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72, q12]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71,
                   q12 + plan_setLiftSingle_sequenceRemoveLeft_size],
              q12 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72],
              q12 + plan_setLiftSingle_sequenceRemoveLeft_size <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71];
                  int(1..3)])
             | q12 : int(1..numberLocations)])
    /\
    plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72]
    =
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71]
    - plan_setLiftSingle_sequenceRemoveLeft_size,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72 = plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71 = plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72,
    plan_setLiftSingle_sequenceRemoveLeft_activation -> true,
    !plan_setLiftSingle_sequenceRemoveLeft_activation ->
    and([plan_setLiftSingle_sequenceRemoveLeft_size = 1, plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71 = 1,
         plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    allDiff([plan_setLiftSingle_sequenceRemoveRight_conjure_aux73; int(1)]),
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_setLiftSingle_sequenceRemoveRight_conjure_aux73 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    allDiff([plan_setLiftSingle_sequenceRemoveRight_conjure_aux74; int(1)]),
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_setLiftSingle_sequenceRemoveRight_conjure_aux74 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    and([q194 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q194 = plan_setLiftSingle_sequenceRemoveRight_conjure_aux73)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q194] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q194]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q194, q203] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q194, q203]
                  | q203 : int(1..numberLocations)])
             | q194 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    and([q11 <=
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRemoveRight_conjure_aux74]
         ->
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRemoveRight_conjure_aux74, q11]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRemoveRight_conjure_aux73, q11],
              q11 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRemoveRight_conjure_aux74],
              q11 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRemoveRight_conjure_aux73];
                  int(1..3)])
             | q11 : int(1..numberLocations)])
    /\
    plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceRemoveRight_conjure_aux74]
    =
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceRemoveRight_conjure_aux73]
    - plan_setLiftSingle_sequenceRemoveRight_size,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_setLiftSingle_sequenceRemoveRight_conjure_aux74 = plan_setLiftSingle_sequenceRemoveRight_conjure_aux73,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_setLiftSingle_sequenceRemoveRight_conjure_aux73 = plan_setLiftSingle_sequenceRemoveRight_conjure_aux74,
    plan_setLiftSingle_sequenceRemoveRight_activation -> true,
    !plan_setLiftSingle_sequenceRemoveRight_activation ->
    and([plan_setLiftSingle_sequenceRemoveRight_size = 1, plan_setLiftSingle_sequenceRemoveRight_conjure_aux73 = 1,
         plan_setLiftSingle_sequenceRemoveRight_conjure_aux74 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    allDiff([plan_setLiftSingle_sequenceReverseSub_conjure_aux75; int(1)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_setLiftSingle_sequenceReverseSub_conjure_aux75 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceReverseSub_activation ->
    allDiff([plan_setLiftSingle_sequenceReverseSub_conjure_aux76; int(1)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_setLiftSingle_sequenceReverseSub_conjure_aux76 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceReverseSub_activation ->
    and([q205 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q205 = plan_setLiftSingle_sequenceReverseSub_conjure_aux75)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q205] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q205]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q205, q214] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q205, q214]
                  | q214 : int(1..numberLocations)])
             | q205 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    and([plan_setLiftSingle_sequenceReverseSub_conjure_aux4 - plan_setLiftSingle_sequenceReverseSub_conjure_aux3 =
         plan_setLiftSingle_sequenceReverseSub_size,
         plan_setLiftSingle_sequenceReverseSub_conjure_aux3 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceReverseSub_conjure_aux75],
         plan_setLiftSingle_sequenceReverseSub_conjure_aux4 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceReverseSub_conjure_aux75],
         and([(q4 < plan_setLiftSingle_sequenceReverseSub_conjure_aux3 \/
               q4 > plan_setLiftSingle_sequenceReverseSub_conjure_aux4)
              /\
              q4 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceReverseSub_conjure_aux76]
              ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux76, q4]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux75, q4],
                   q4 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux76],
                   q4 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux75];
                       int(1..3)])
                  | q4 : int(1..numberLocations)]),
         and([q4 <= plan_setLiftSingle_sequenceReverseSub_size ->
              and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux76,
                        plan_setLiftSingle_sequenceReverseSub_conjure_aux3 + q4]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux75,
                        plan_setLiftSingle_sequenceReverseSub_conjure_aux4 - q4],
                   plan_setLiftSingle_sequenceReverseSub_conjure_aux3 + q4 <=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux76],
                   plan_setLiftSingle_sequenceReverseSub_conjure_aux4 - q4 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux75];
                       int(1..3)])
                  | q4 : int(0..numberLocations)]);
             int(1..5)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_setLiftSingle_sequenceReverseSub_conjure_aux76 = plan_setLiftSingle_sequenceReverseSub_conjure_aux75,
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_setLiftSingle_sequenceReverseSub_conjure_aux75 = plan_setLiftSingle_sequenceReverseSub_conjure_aux76,
    plan_setLiftSingle_sequenceReverseSub_activation -> true,
    !plan_setLiftSingle_sequenceReverseSub_activation ->
    and([plan_setLiftSingle_sequenceReverseSub_size = 1, plan_setLiftSingle_sequenceReverseSub_conjure_aux3 = 1,
         plan_setLiftSingle_sequenceReverseSub_conjure_aux4 = 1,
         plan_setLiftSingle_sequenceReverseSub_conjure_aux75 = 1,
         plan_setLiftSingle_sequenceReverseSub_conjure_aux76 = 1;
             int(1..5)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceRotateLeft_conjure_aux77; int(1)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_setLiftSingle_sequenceRotateLeft_conjure_aux77 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceRotateLeft_conjure_aux78; int(1)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_setLiftSingle_sequenceRotateLeft_conjure_aux78 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    and([q216 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q216 = plan_setLiftSingle_sequenceRotateLeft_conjure_aux77)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q216] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q216]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q216, q225] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q216, q225]
                  | q225 : int(1..numberLocations)])
             | q216 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    and([q8 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77]
         ->
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRotateLeft_conjure_aux78, q8]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77,
                   (q8 - 1 - plan_setLiftSingle_sequenceRotateLeft_size) %
                   (incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                        [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77]
                    - 1)
                   + 1],
              q8 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRotateLeft_conjure_aux78],
              (q8 - 1 - plan_setLiftSingle_sequenceRotateLeft_size) %
              (incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                   [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77]
               - 1)
              + 1
              <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77];
                  int(1..3)])
             | q8 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_setLiftSingle_sequenceRotateLeft_conjure_aux78 = plan_setLiftSingle_sequenceRotateLeft_conjure_aux77,
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_setLiftSingle_sequenceRotateLeft_conjure_aux77 = plan_setLiftSingle_sequenceRotateLeft_conjure_aux78,
    plan_setLiftSingle_sequenceRotateLeft_activation -> true,
    !plan_setLiftSingle_sequenceRotateLeft_activation ->
    and([plan_setLiftSingle_sequenceRotateLeft_size = 1, plan_setLiftSingle_sequenceRotateLeft_conjure_aux77 = 1,
         plan_setLiftSingle_sequenceRotateLeft_conjure_aux78 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    allDiff([plan_setLiftSingle_sequenceRotateRight_conjure_aux79; int(1)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_setLiftSingle_sequenceRotateRight_conjure_aux79 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRotateRight_activation ->
    allDiff([plan_setLiftSingle_sequenceRotateRight_conjure_aux80; int(1)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_setLiftSingle_sequenceRotateRight_conjure_aux80 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRotateRight_activation ->
    and([q227 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q227 = plan_setLiftSingle_sequenceRotateRight_conjure_aux79)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q227] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q227]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q227, q236] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q227, q236]
                  | q236 : int(1..numberLocations)])
             | q227 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    and([q7 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRotateRight_conjure_aux79]
         ->
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRotateRight_conjure_aux80, q7]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRotateRight_conjure_aux79,
                   (q7 - 1 + plan_setLiftSingle_sequenceRotateRight_size) %
                   (incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                        [plan_setLiftSingle_sequenceRotateRight_conjure_aux79]
                    - 1)
                   + 1],
              q7 <=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRotateRight_conjure_aux80],
              (q7 - 1 + plan_setLiftSingle_sequenceRotateRight_size) %
              (incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                   [plan_setLiftSingle_sequenceRotateRight_conjure_aux79]
               - 1)
              + 1
              <=
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRotateRight_conjure_aux79];
                  int(1..3)])
             | q7 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_setLiftSingle_sequenceRotateRight_conjure_aux80 = plan_setLiftSingle_sequenceRotateRight_conjure_aux79,
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_setLiftSingle_sequenceRotateRight_conjure_aux79 = plan_setLiftSingle_sequenceRotateRight_conjure_aux80,
    plan_setLiftSingle_sequenceRotateRight_activation -> true,
    !plan_setLiftSingle_sequenceRotateRight_activation ->
    and([plan_setLiftSingle_sequenceRotateRight_size = 1, plan_setLiftSingle_sequenceRotateRight_conjure_aux79 = 1,
         plan_setLiftSingle_sequenceRotateRight_conjure_aux80 = 1;
             int(1..3)]),
    plan_setRemoveSingle_activation ->
    allDiff([plan_setRemoveSingle_conjure_aux81, plan_setRemoveSingle_conjure_aux82; int(1..2)]),
    plan_setRemoveSingle_activation ->
    plan_setRemoveSingle_conjure_aux81 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
    plan_setRemoveSingle_conjure_aux82 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setRemoveSingle_activation -> allDiff([plan_setRemoveSingle_conjure_aux83; int(1)]),
    plan_setRemoveSingle_activation -> plan_setRemoveSingle_conjure_aux83 <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_setRemoveSingle_activation ->
    and([q238 <= incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker /\
         !(q238 = plan_setRemoveSingle_conjure_aux81 \/ q238 = plan_setRemoveSingle_conjure_aux82)
         ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q238] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q238]
         /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q238, q243] =
              incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q238, q243]
                  | q243 : int(1..numberLocations)])
             | q238 : int(1..numberLocations)]),
    plan_setRemoveSingle_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux83] =
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux81]
    /\
    and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[plan_setRemoveSingle_conjure_aux83, q245] =
         incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values
             [plan_setRemoveSingle_conjure_aux81, q245]
             | q245 : int(1..numberLocations)])
    /\
    incumbent_plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux82] =
    plan_setRemoveSingle_size,
    plan_setRemoveSingle_activation ->
    plan_ExplicitVarSizeWithMarkerR15_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR15_Marker + -1,
    plan_setRemoveSingle_activation ->
    plan_setRemoveSingle_conjure_aux81 = plan_setRemoveSingle_conjure_aux83 \/
    plan_setRemoveSingle_conjure_aux82 = plan_setRemoveSingle_conjure_aux83,
    plan_setRemoveSingle_activation -> true,
    !plan_setRemoveSingle_activation ->
    and([plan_setRemoveSingle_size = 1, plan_setRemoveSingle_conjure_aux81 = 1, plan_setRemoveSingle_conjure_aux82 = 1,
         plan_setRemoveSingle_conjure_aux83 = 1;
             int(1..4)]),
    and([and([q20 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q19] !=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q20]
              \/
              (or([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q19, q27] !=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q20, q27]
                       | q27 : int(1..numberLocations)])
               \/
               or([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q19, q27] !=
                   plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q20, q27]
                       | q27 : int(1..numberLocations)]))
                  | q20 : int(q19 + 1..numberLocations)])
             | q19 : int(1..numberLocations)]),
    and([q21 > plan_ExplicitVarSizeWithMarkerR15_Marker ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q21] = 0 /\
         and([plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q21, q28] = 1
                  | q28 : int(1..numberLocations)])
             | q21 : int(1..numberLocations)]),
    minVehicles <= plan_ExplicitVarSizeWithMarkerR15_Marker,
    plan_ExplicitVarSizeWithMarkerR15_Marker <= numberLocations,
    and([q22 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
         and([q23 > plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q22] ->
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q22, q23] = 1
                  | q23 : int(1..numberLocations)])
             | q22 : int(1..numberLocations)]),
    and([q22 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
         1 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q22]
             | q22 : int(1..numberLocations)]),
    and([q22 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
         plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q22] <= numberLocations
             | q22 : int(1..numberLocations)]),
    and([q22 <= plan_ExplicitVarSizeWithMarkerR15_Marker ->
         and([q24 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q22] /\
              q25 <= plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Length[q22]
              ->
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q22, q24] !=
              plan_ExplicitVarSizeWithMarkerR15_Values_ExplicitBounded_Values[q22, q25]
                  | q24 : int(1..numberLocations), q25 : int(1..numberLocations), q24 < q25])
             | q22 : int(1..numberLocations)])

$ Conjure's
$ {"finds": [{"Name": "plan"}, {"Name": "optVar"}],
$  "givens": [{"Name": "numberLocations"}, {"Name": "orderWeights"}, {"Name": "costs"}, {"Name": "vehicleCapacity"}],
$  "enumGivens": [],
$  "enumLettings": [],
$  "lettings":
$      [[{"Name": "locDomain"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                          {"Reference":
$                               [{"Name": "numberLocations"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "numberLocations"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                      {"NoRegion": []}]}]}]}]]}}],
$       [{"Name": "plannedLocDomain"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "numberLocations"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "numberLocations"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                      {"NoRegion": []}]}]}]}]]}}],
$       [{"Name": "maxTotalCost"},
$        {"Op":
$             {"MkOpProduct":
$                  {"AbstractLiteral":
$                       {"AbsLitMatrix":
$                            [{"DomainInt":
$                                  [{"TagInt": []},
$                                   [{"RangeBounded":
$                                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                          {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
$                             [{"Op":
$                                   {"MkOpSum":
$                                        {"Comprehension":
$                                             [{"Op":
$                                                   {"MkOpImage":
$                                                        [{"Reference":
$                                                              [{"Name": "costs"},
$                                                               {"DeclNoRepr":
$                                                                    ["Given", {"Name": "costs"},
$                                                                     {"DomainFunction":
$                                                                          [[],
$                                                                           [{"SizeAttr_Size":
$                                                                                 {"Reference":
$                                                                                      [{"MachineName": ["fin", 3, []]},
$                                                                                       {"DeclNoRepr":
$                                                                                            ["Given",
$                                                                                             {"MachineName":
$                                                                                                  ["fin", 3, []]},
$                                                                                             {"DomainInt":
$                                                                                                  [{"TagInt": []}, []]},
$                                                                                             {"NoRegion": []}]}]}},
$                                                                            "PartialityAttr_Total",
$                                                                            "JectivityAttr_None"],
$                                                                           {"DomainTuple":
$                                                                                [{"DomainInt":
$                                                                                      [{"TagInt": []},
$                                                                                       [{"RangeBounded":
$                                                                                             [{"Constant":
$                                                                                                   {"ConstantInt":
$                                                                                                        [{"TagInt": []},
$                                                                                                         0]}},
$                                                                                              {"Reference":
$                                                                                                   [{"Name":
$                                                                                                         "numberLocations"},
$                                                                                                    {"DeclNoRepr":
$                                                                                                         ["Given",
$                                                                                                          {"Name":
$                                                                                                               "numberLocations"},
$                                                                                                          {"DomainInt":
$                                                                                                               [{"TagInt":
$                                                                                                                     []},
$                                                                                                                [{"RangeLowerBounded":
$                                                                                                                      {"Constant":
$                                                                                                                           {"ConstantInt":
$                                                                                                                                [{"TagInt":
$                                                                                                                                      []},
$                                                                                                                                 1]}}}]]},
$                                                                                                          {"NoRegion":
$                                                                                                               []}]}]}]}]]},
$                                                                                 {"DomainInt":
$                                                                                      [{"TagInt": []},
$                                                                                       [{"RangeBounded":
$                                                                                             [{"Constant":
$                                                                                                   {"ConstantInt":
$                                                                                                        [{"TagInt": []},
$                                                                                                         0]}},
$                                                                                              {"Reference":
$                                                                                                   [{"Name":
$                                                                                                         "numberLocations"},
$                                                                                                    {"DeclNoRepr":
$                                                                                                         ["Given",
$                                                                                                          {"Name":
$                                                                                                               "numberLocations"},
$                                                                                                          {"DomainInt":
$                                                                                                               [{"TagInt":
$                                                                                                                     []},
$                                                                                                                [{"RangeLowerBounded":
$                                                                                                                      {"Constant":
$                                                                                                                           {"ConstantInt":
$                                                                                                                                [{"TagInt":
$                                                                                                                                      []},
$                                                                                                                                 1]}}}]]},
$                                                                                                          {"NoRegion":
$                                                                                                               []}]}]}]}]]}]},
$                                                                           {"DomainInt":
$                                                                                [{"TagInt": []},
$                                                                                 [{"RangeBounded":
$                                                                                       [{"Constant":
$                                                                                             {"ConstantInt":
$                                                                                                  [{"TagInt": []}, 0]}},
$                                                                                        {"Reference":
$                                                                                             [{"MachineName":
$                                                                                                   ["fin", 4, []]},
$                                                                                              {"DeclNoRepr":
$                                                                                                   ["Given",
$                                                                                                    {"MachineName":
$                                                                                                         ["fin", 4, []]},
$                                                                                                    {"DomainInt":
$                                                                                                         [{"TagInt": []},
$                                                                                                          []]},
$                                                                                                    {"NoRegion":
$                                                                                                         []}]}]}]}]]}]},
$                                                                     {"NoRegion": []}]}]},
$                                                         {"AbstractLiteral":
$                                                              {"AbsLitTuple":
$                                                                   [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                                                    {"Reference":
$                                                                         [{"Name": "i"},
$                                                                          {"DeclNoRepr":
$                                                                               ["Quantified", {"Name": "i"},
$                                                                                {"DomainInt":
$                                                                                     [{"TagInt": []},
$                                                                                      [{"RangeBounded":
$                                                                                            [{"Constant":
$                                                                                                  {"ConstantInt":
$                                                                                                       [{"TagInt": []},
$                                                                                                        1]}},
$                                                                                             {"Reference":
$                                                                                                  [{"Name":
$                                                                                                        "numberLocations"},
$                                                                                                   {"DeclNoRepr":
$                                                                                                        ["Given",
$                                                                                                         {"Name":
$                                                                                                              "numberLocations"},
$                                                                                                         {"DomainInt":
$                                                                                                              [{"TagInt":
$                                                                                                                    []},
$                                                                                                               [{"RangeLowerBounded":
$                                                                                                                     {"Constant":
$                                                                                                                          {"ConstantInt":
$                                                                                                                               [{"TagInt":
$                                                                                                                                     []},
$                                                                                                                                1]}}}]]},
$                                                                                                         {"NoRegion":
$                                                                                                              []}]}]}]}]]},
$                                                                                {"NoRegion": []}]}]}]}}]}},
$                                              [{"Generator":
$                                                    {"GenDomainNoRepr":
$                                                         [{"Single": {"Name": "i"}},
$                                                          {"DomainInt":
$                                                               [{"TagInt": []},
$                                                                [{"RangeBounded":
$                                                                      [{"Constant":
$                                                                            {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                       {"Reference":
$                                                                            [{"Name": "numberLocations"},
$                                                                             {"DeclNoRepr":
$                                                                                  ["Given", {"Name": "numberLocations"},
$                                                                                   {"DomainInt":
$                                                                                        [{"TagInt": []},
$                                                                                         [{"RangeLowerBounded":
$                                                                                               {"Constant":
$                                                                                                    {"ConstantInt":
$                                                                                                         [{"TagInt": []},
$                                                                                                          1]}}}]]},
$                                                                                   {"NoRegion": []}]}]}]}]]}]}}]]}}},
$                              {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]]}}}}],
$       [{"Name": "totalOrderWeight"},
$        {"Op":
$             {"MkOpSum":
$                  {"Comprehension":
$                       [{"Reference":
$                             [{"Name": "weight"},
$                              {"InComprehension":
$                                   {"GenInExpr":
$                                        [{"AbsPatTuple": [{"Single": {"Name": "_"}}, {"Single": {"Name": "weight"}}]},
$                                         {"Reference":
$                                              [{"Name": "orderWeights"},
$                                               {"DeclNoRepr":
$                                                    ["Given", {"Name": "orderWeights"},
$                                                     {"DomainFunction":
$                                                          [[],
$                                                           [{"SizeAttr_Size":
$                                                                 {"Reference":
$                                                                      [{"MachineName": ["fin", 1, []]},
$                                                                       {"DeclNoRepr":
$                                                                            ["Given", {"MachineName": ["fin", 1, []]},
$                                                                             {"DomainInt": [{"TagInt": []}, []]},
$                                                                             {"NoRegion": []}]}]}},
$                                                            "PartialityAttr_Total", "JectivityAttr_None"],
$                                                           {"DomainInt":
$                                                                [{"TagInt": []},
$                                                                 [{"RangeBounded":
$                                                                       [{"Constant":
$                                                                             {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                        {"Reference":
$                                                                             [{"Name": "numberLocations"},
$                                                                              {"DeclNoRepr":
$                                                                                   ["Given", {"Name": "numberLocations"},
$                                                                                    {"DomainInt":
$                                                                                         [{"TagInt": []},
$                                                                                          [{"RangeLowerBounded":
$                                                                                                {"Constant":
$                                                                                                     {"ConstantInt":
$                                                                                                          [{"TagInt":
$                                                                                                                []},
$                                                                                                           1]}}}]]},
$                                                                                    {"NoRegion": []}]}]}]}]]},
$                                                           {"DomainInt":
$                                                                [{"TagInt": []},
$                                                                 [{"RangeBounded":
$                                                                       [{"Constant":
$                                                                             {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                        {"Reference":
$                                                                             [{"MachineName": ["fin", 2, []]},
$                                                                              {"DeclNoRepr":
$                                                                                   ["Given",
$                                                                                    {"MachineName": ["fin", 2, []]},
$                                                                                    {"DomainInt": [{"TagInt": []}, []]},
$                                                                                    {"NoRegion": []}]}]}]}]]}]},
$                                                     {"NoRegion": []}]}]}]}}]},
$                        [{"Generator":
$                              {"GenInExpr":
$                                   [{"AbsPatTuple": [{"Single": {"Name": "_"}}, {"Single": {"Name": "weight"}}]},
$                                    {"Reference":
$                                         [{"Name": "orderWeights"},
$                                          {"DeclNoRepr":
$                                               ["Given", {"Name": "orderWeights"},
$                                                {"DomainFunction":
$                                                     [[],
$                                                      [{"SizeAttr_Size":
$                                                            {"Reference":
$                                                                 [{"MachineName": ["fin", 1, []]},
$                                                                  {"DeclNoRepr":
$                                                                       ["Given", {"MachineName": ["fin", 1, []]},
$                                                                        {"DomainInt": [{"TagInt": []}, []]},
$                                                                        {"NoRegion": []}]}]}},
$                                                       "PartialityAttr_Total", "JectivityAttr_None"],
$                                                      {"DomainInt":
$                                                           [{"TagInt": []},
$                                                            [{"RangeBounded":
$                                                                  [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                   {"Reference":
$                                                                        [{"Name": "numberLocations"},
$                                                                         {"DeclNoRepr":
$                                                                              ["Given", {"Name": "numberLocations"},
$                                                                               {"DomainInt":
$                                                                                    [{"TagInt": []},
$                                                                                     [{"RangeLowerBounded":
$                                                                                           {"Constant":
$                                                                                                {"ConstantInt":
$                                                                                                     [{"TagInt": []},
$                                                                                                      1]}}}]]},
$                                                                               {"NoRegion": []}]}]}]}]]},
$                                                      {"DomainInt":
$                                                           [{"TagInt": []},
$                                                            [{"RangeBounded":
$                                                                  [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                   {"Reference":
$                                                                        [{"MachineName": ["fin", 2, []]},
$                                                                         {"DeclNoRepr":
$                                                                              ["Given", {"MachineName": ["fin", 2, []]},
$                                                                               {"DomainInt": [{"TagInt": []}, []]},
$                                                                               {"NoRegion": []}]}]}]}]]}]},
$                                                {"NoRegion": []}]}]}]}}]]}}}],
$       [{"Name": "minVehicles"},
$        {"Op":
$             {"MkOpSum":
$                  {"AbstractLiteral":
$                       {"AbsLitMatrix":
$                            [{"DomainInt":
$                                  [{"TagInt": []},
$                                   [{"RangeBounded":
$                                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                          {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
$                             [{"Op":
$                                   {"MkOpDiv":
$                                        [{"Reference":
$                                              [{"Name": "totalOrderWeight"},
$                                               {"Alias":
$                                                    {"Op":
$                                                         {"MkOpSum":
$                                                              {"Comprehension":
$                                                                   [{"Reference":
$                                                                         [{"Name": "weight"},
$                                                                          {"InComprehension":
$                                                                               {"GenInExpr":
$                                                                                    [{"AbsPatTuple":
$                                                                                          [{"Single": {"Name": "_"}},
$                                                                                           {"Single":
$                                                                                                {"Name": "weight"}}]},
$                                                                                     {"Reference":
$                                                                                          [{"Name": "orderWeights"},
$                                                                                           {"DeclNoRepr":
$                                                                                                ["Given",
$                                                                                                 {"Name":
$                                                                                                      "orderWeights"},
$                                                                                                 {"DomainFunction":
$                                                                                                      [[],
$                                                                                                       [{"SizeAttr_Size":
$                                                                                                             {"Reference":
$                                                                                                                  [{"MachineName":
$                                                                                                                        ["fin",
$                                                                                                                         1,
$                                                                                                                         []]},
$                                                                                                                   {"DeclNoRepr":
$                                                                                                                        ["Given",
$                                                                                                                         {"MachineName":
$                                                                                                                              ["fin",
$                                                                                                                               1,
$                                                                                                                               []]},
$                                                                                                                         {"DomainInt":
$                                                                                                                              [{"TagInt":
$                                                                                                                                    []},
$                                                                                                                               []]},
$                                                                                                                         {"NoRegion":
$                                                                                                                              []}]}]}},
$                                                                                                        "PartialityAttr_Total",
$                                                                                                        "JectivityAttr_None"],
$                                                                                                       {"DomainInt":
$                                                                                                            [{"TagInt":
$                                                                                                                  []},
$                                                                                                             [{"RangeBounded":
$                                                                                                                   [{"Constant":
$                                                                                                                         {"ConstantInt":
$                                                                                                                              [{"TagInt":
$                                                                                                                                    []},
$                                                                                                                               1]}},
$                                                                                                                    {"Reference":
$                                                                                                                         [{"Name":
$                                                                                                                               "numberLocations"},
$                                                                                                                          {"DeclNoRepr":
$                                                                                                                               ["Given",
$                                                                                                                                {"Name":
$                                                                                                                                     "numberLocations"},
$                                                                                                                                {"DomainInt":
$                                                                                                                                     [{"TagInt":
$                                                                                                                                           []},
$                                                                                                                                      [{"RangeLowerBounded":
$                                                                                                                                            {"Constant":
$                                                                                                                                                 {"ConstantInt":
$                                                                                                                                                      [{"TagInt":
$                                                                                                                                                            []},
$                                                                                                                                                       1]}}}]]},
$                                                                                                                                {"NoRegion":
$                                                                                                                                     []}]}]}]}]]},
$                                                                                                       {"DomainInt":
$                                                                                                            [{"TagInt":
$                                                                                                                  []},
$                                                                                                             [{"RangeBounded":
$                                                                                                                   [{"Constant":
$                                                                                                                         {"ConstantInt":
$                                                                                                                              [{"TagInt":
$                                                                                                                                    []},
$                                                                                                                               1]}},
$                                                                                                                    {"Reference":
$                                                                                                                         [{"MachineName":
$                                                                                                                               ["fin",
$                                                                                                                                2,
$                                                                                                                                []]},
$                                                                                                                          {"DeclNoRepr":
$                                                                                                                               ["Given",
$                                                                                                                                {"MachineName":
$                                                                                                                                     ["fin",
$                                                                                                                                      2,
$                                                                                                                                      []]},
$                                                                                                                                {"DomainInt":
$                                                                                                                                     [{"TagInt":
$                                                                                                                                           []},
$                                                                                                                                      []]},
$                                                                                                                                {"NoRegion":
$                                                                                                                                     []}]}]}]}]]}]},
$                                                                                                 {"NoRegion":
$                                                                                                      []}]}]}]}}]},
$                                                                    [{"Generator":
$                                                                          {"GenInExpr":
$                                                                               [{"AbsPatTuple":
$                                                                                     [{"Single": {"Name": "_"}},
$                                                                                      {"Single": {"Name": "weight"}}]},
$                                                                                {"Reference":
$                                                                                     [{"Name": "orderWeights"},
$                                                                                      {"DeclNoRepr":
$                                                                                           ["Given",
$                                                                                            {"Name": "orderWeights"},
$                                                                                            {"DomainFunction":
$                                                                                                 [[],
$                                                                                                  [{"SizeAttr_Size":
$                                                                                                        {"Reference":
$                                                                                                             [{"MachineName":
$                                                                                                                   ["fin",
$                                                                                                                    1,
$                                                                                                                    []]},
$                                                                                                              {"DeclNoRepr":
$                                                                                                                   ["Given",
$                                                                                                                    {"MachineName":
$                                                                                                                         ["fin",
$                                                                                                                          1,
$                                                                                                                          []]},
$                                                                                                                    {"DomainInt":
$                                                                                                                         [{"TagInt":
$                                                                                                                               []},
$                                                                                                                          []]},
$                                                                                                                    {"NoRegion":
$                                                                                                                         []}]}]}},
$                                                                                                   "PartialityAttr_Total",
$                                                                                                   "JectivityAttr_None"],
$                                                                                                  {"DomainInt":
$                                                                                                       [{"TagInt": []},
$                                                                                                        [{"RangeBounded":
$                                                                                                              [{"Constant":
$                                                                                                                    {"ConstantInt":
$                                                                                                                         [{"TagInt":
$                                                                                                                               []},
$                                                                                                                          1]}},
$                                                                                                               {"Reference":
$                                                                                                                    [{"Name":
$                                                                                                                          "numberLocations"},
$                                                                                                                     {"DeclNoRepr":
$                                                                                                                          ["Given",
$                                                                                                                           {"Name":
$                                                                                                                                "numberLocations"},
$                                                                                                                           {"DomainInt":
$                                                                                                                                [{"TagInt":
$                                                                                                                                      []},
$                                                                                                                                 [{"RangeLowerBounded":
$                                                                                                                                       {"Constant":
$                                                                                                                                            {"ConstantInt":
$                                                                                                                                                 [{"TagInt":
$                                                                                                                                                       []},
$                                                                                                                                                  1]}}}]]},
$                                                                                                                           {"NoRegion":
$                                                                                                                                []}]}]}]}]]},
$                                                                                                  {"DomainInt":
$                                                                                                       [{"TagInt": []},
$                                                                                                        [{"RangeBounded":
$                                                                                                              [{"Constant":
$                                                                                                                    {"ConstantInt":
$                                                                                                                         [{"TagInt":
$                                                                                                                               []},
$                                                                                                                          1]}},
$                                                                                                               {"Reference":
$                                                                                                                    [{"MachineName":
$                                                                                                                          ["fin",
$                                                                                                                           2,
$                                                                                                                           []]},
$                                                                                                                     {"DeclNoRepr":
$                                                                                                                          ["Given",
$                                                                                                                           {"MachineName":
$                                                                                                                                ["fin",
$                                                                                                                                 2,
$                                                                                                                                 []]},
$                                                                                                                           {"DomainInt":
$                                                                                                                                [{"TagInt":
$                                                                                                                                      []},
$                                                                                                                                 []]},
$                                                                                                                           {"NoRegion":
$                                                                                                                                []}]}]}]}]]}]},
$                                                                                            {"NoRegion":
$                                                                                                 []}]}]}]}}]]}}}}]},
$                                         {"Reference":
$                                              [{"Name": "vehicleCapacity"},
$                                               {"DeclNoRepr":
$                                                    ["Given", {"Name": "vehicleCapacity"},
$                                                     {"DomainInt":
$                                                          [{"TagInt": []},
$                                                           [{"RangeLowerBounded":
$                                                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                                     {"NoRegion": []}]}]}]}},
$                              {"Op":
$                                   {"MkOpToInt":
$                                        {"Op":
$                                             {"MkOpNeq":
$                                                  [{"Op":
$                                                        {"MkOpMod":
$                                                             [{"Reference":
$                                                                   [{"Name": "totalOrderWeight"},
$                                                                    {"Alias":
$                                                                         {"Op":
$                                                                              {"MkOpSum":
$                                                                                   {"Comprehension":
$                                                                                        [{"Reference":
$                                                                                              [{"Name": "weight"},
$                                                                                               {"InComprehension":
$                                                                                                    {"GenInExpr":
$                                                                                                         [{"AbsPatTuple":
$                                                                                                               [{"Single":
$                                                                                                                     {"Name":
$                                                                                                                          "_"}},
$                                                                                                                {"Single":
$                                                                                                                     {"Name":
$                                                                                                                          "weight"}}]},
$                                                                                                          {"Reference":
$                                                                                                               [{"Name":
$                                                                                                                     "orderWeights"},
$                                                                                                                {"DeclNoRepr":
$                                                                                                                     ["Given",
$                                                                                                                      {"Name":
$                                                                                                                           "orderWeights"},
$                                                                                                                      {"DomainFunction":
$                                                                                                                           [[],
$                                                                                                                            [{"SizeAttr_Size":
$                                                                                                                                  {"Reference":
$                                                                                                                                       [{"MachineName":
$                                                                                                                                             ["fin",
$                                                                                                                                              1,
$                                                                                                                                              []]},
$                                                                                                                                        {"DeclNoRepr":
$                                                                                                                                             ["Given",
$                                                                                                                                              {"MachineName":
$                                                                                                                                                   ["fin",
$                                                                                                                                                    1,
$                                                                                                                                                    []]},
$                                                                                                                                              {"DomainInt":
$                                                                                                                                                   [{"TagInt":
$                                                                                                                                                         []},
$                                                                                                                                                    []]},
$                                                                                                                                              {"NoRegion":
$                                                                                                                                                   []}]}]}},
$                                                                                                                             "PartialityAttr_Total",
$                                                                                                                             "JectivityAttr_None"],
$                                                                                                                            {"DomainInt":
$                                                                                                                                 [{"TagInt":
$                                                                                                                                       []},
$                                                                                                                                  [{"RangeBounded":
$                                                                                                                                        [{"Constant":
$                                                                                                                                              {"ConstantInt":
$                                                                                                                                                   [{"TagInt":
$                                                                                                                                                         []},
$                                                                                                                                                    1]}},
$                                                                                                                                         {"Reference":
$                                                                                                                                              [{"Name":
$                                                                                                                                                    "numberLocations"},
$                                                                                                                                               {"DeclNoRepr":
$                                                                                                                                                    ["Given",
$                                                                                                                                                     {"Name":
$                                                                                                                                                          "numberLocations"},
$                                                                                                                                                     {"DomainInt":
$                                                                                                                                                          [{"TagInt":
$                                                                                                                                                                []},
$                                                                                                                                                           [{"RangeLowerBounded":
$                                                                                                                                                                 {"Constant":
$                                                                                                                                                                      {"ConstantInt":
$                                                                                                                                                                           [{"TagInt":
$                                                                                                                                                                                 []},
$                                                                                                                                                                            1]}}}]]},
$                                                                                                                                                     {"NoRegion":
$                                                                                                                                                          []}]}]}]}]]},
$                                                                                                                            {"DomainInt":
$                                                                                                                                 [{"TagInt":
$                                                                                                                                       []},
$                                                                                                                                  [{"RangeBounded":
$                                                                                                                                        [{"Constant":
$                                                                                                                                              {"ConstantInt":
$                                                                                                                                                   [{"TagInt":
$                                                                                                                                                         []},
$                                                                                                                                                    1]}},
$                                                                                                                                         {"Reference":
$                                                                                                                                              [{"MachineName":
$                                                                                                                                                    ["fin",
$                                                                                                                                                     2,
$                                                                                                                                                     []]},
$                                                                                                                                               {"DeclNoRepr":
$                                                                                                                                                    ["Given",
$                                                                                                                                                     {"MachineName":
$                                                                                                                                                          ["fin",
$                                                                                                                                                           2,
$                                                                                                                                                           []]},
$                                                                                                                                                     {"DomainInt":
$                                                                                                                                                          [{"TagInt":
$                                                                                                                                                                []},
$                                                                                                                                                           []]},
$                                                                                                                                                     {"NoRegion":
$                                                                                                                                                          []}]}]}]}]]}]},
$                                                                                                                      {"NoRegion":
$                                                                                                                           []}]}]}]}}]},
$                                                                                         [{"Generator":
$                                                                                               {"GenInExpr":
$                                                                                                    [{"AbsPatTuple":
$                                                                                                          [{"Single":
$                                                                                                                {"Name":
$                                                                                                                     "_"}},
$                                                                                                           {"Single":
$                                                                                                                {"Name":
$                                                                                                                     "weight"}}]},
$                                                                                                     {"Reference":
$                                                                                                          [{"Name":
$                                                                                                                "orderWeights"},
$                                                                                                           {"DeclNoRepr":
$                                                                                                                ["Given",
$                                                                                                                 {"Name":
$                                                                                                                      "orderWeights"},
$                                                                                                                 {"DomainFunction":
$                                                                                                                      [[],
$                                                                                                                       [{"SizeAttr_Size":
$                                                                                                                             {"Reference":
$                                                                                                                                  [{"MachineName":
$                                                                                                                                        ["fin",
$                                                                                                                                         1,
$                                                                                                                                         []]},
$                                                                                                                                   {"DeclNoRepr":
$                                                                                                                                        ["Given",
$                                                                                                                                         {"MachineName":
$                                                                                                                                              ["fin",
$                                                                                                                                               1,
$                                                                                                                                               []]},
$                                                                                                                                         {"DomainInt":
$                                                                                                                                              [{"TagInt":
$                                                                                                                                                    []},
$                                                                                                                                               []]},
$                                                                                                                                         {"NoRegion":
$                                                                                                                                              []}]}]}},
$                                                                                                                        "PartialityAttr_Total",
$                                                                                                                        "JectivityAttr_None"],
$                                                                                                                       {"DomainInt":
$                                                                                                                            [{"TagInt":
$                                                                                                                                  []},
$                                                                                                                             [{"RangeBounded":
$                                                                                                                                   [{"Constant":
$                                                                                                                                         {"ConstantInt":
$                                                                                                                                              [{"TagInt":
$                                                                                                                                                    []},
$                                                                                                                                               1]}},
$                                                                                                                                    {"Reference":
$                                                                                                                                         [{"Name":
$                                                                                                                                               "numberLocations"},
$                                                                                                                                          {"DeclNoRepr":
$                                                                                                                                               ["Given",
$                                                                                                                                                {"Name":
$                                                                                                                                                     "numberLocations"},
$                                                                                                                                                {"DomainInt":
$                                                                                                                                                     [{"TagInt":
$                                                                                                                                                           []},
$                                                                                                                                                      [{"RangeLowerBounded":
$                                                                                                                                                            {"Constant":
$                                                                                                                                                                 {"ConstantInt":
$                                                                                                                                                                      [{"TagInt":
$                                                                                                                                                                            []},
$                                                                                                                                                                       1]}}}]]},
$                                                                                                                                                {"NoRegion":
$                                                                                                                                                     []}]}]}]}]]},
$                                                                                                                       {"DomainInt":
$                                                                                                                            [{"TagInt":
$                                                                                                                                  []},
$                                                                                                                             [{"RangeBounded":
$                                                                                                                                   [{"Constant":
$                                                                                                                                         {"ConstantInt":
$                                                                                                                                              [{"TagInt":
$                                                                                                                                                    []},
$                                                                                                                                               1]}},
$                                                                                                                                    {"Reference":
$                                                                                                                                         [{"MachineName":
$                                                                                                                                               ["fin",
$                                                                                                                                                2,
$                                                                                                                                                []]},
$                                                                                                                                          {"DeclNoRepr":
$                                                                                                                                               ["Given",
$                                                                                                                                                {"MachineName":
$                                                                                                                                                     ["fin",
$                                                                                                                                                      2,
$                                                                                                                                                      []]},
$                                                                                                                                                {"DomainInt":
$                                                                                                                                                     [{"TagInt":
$                                                                                                                                                           []},
$                                                                                                                                                      []]},
$                                                                                                                                                {"NoRegion":
$                                                                                                                                                     []}]}]}]}]]}]},
$                                                                                                                 {"NoRegion":
$                                                                                                                      []}]}]}]}}]]}}}}]},
$                                                              {"Reference":
$                                                                   [{"Name": "vehicleCapacity"},
$                                                                    {"DeclNoRepr":
$                                                                         ["Given", {"Name": "vehicleCapacity"},
$                                                                          {"DomainInt":
$                                                                               [{"TagInt": []},
$                                                                                [{"RangeLowerBounded":
$                                                                                      {"Constant":
$                                                                                           {"ConstantInt":
$                                                                                                [{"TagInt": []},
$                                                                                                 1]}}}]]},
$                                                                          {"NoRegion": []}]}]}]}},
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 0]}}]}}}}]]}}}}]],
$  "unnameds": [],
$  "strategyQ": {"PickFirst": []},
$  "strategyA": {"Compact": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 2], [1, 1, 1],
$       [1, 1, 2], [1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2],
$       [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2],
$       [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [],
$  "trailRewrites": [],
$  "nameGenState": [["conjure_aux", 84], ["fin", 5], ["q", 262]],
$  "nbExtraGivens": 4,
$  "representations":
$      [[{"MachineName": ["fin", 1, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "numberLocations"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"MachineName": ["fin", 2, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"MachineName": ["fin", 3, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"MachineName": ["fin", 4, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "costs"},
$        {"DomainFunction":
$             [{"Function_ND": []},
$              [{"SizeAttr_Size":
$                    {"Reference":
$                         [{"MachineName": ["fin", 3, []]},
$                          {"DeclHasRepr":
$                               ["Given", {"MachineName": ["fin", 3, []]}, {"DomainInt": [{"TagInt": []}, []]}]}]}},
$               "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainTuple":
$                   [{"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Reference":
$                                      [{"Name": "numberLocations"},
$                                       {"DeclHasRepr":
$                                            ["Given", {"Name": "numberLocations"},
$                                             {"DomainInt":
$                                                  [{"TagInt": []},
$                                                   [{"RangeLowerBounded":
$                                                         {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Reference":
$                                      [{"Name": "numberLocations"},
$                                       {"DeclHasRepr":
$                                            ["Given", {"Name": "numberLocations"},
$                                             {"DomainInt":
$                                                  [{"TagInt": []},
$                                                   [{"RangeLowerBounded":
$                                                         {"Constant":
$                                                              {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                           {"Reference":
$                                [{"MachineName": ["fin", 4, []]},
$                                 {"DeclHasRepr":
$                                      ["Given", {"MachineName": ["fin", 4, []]},
$                                       {"DomainInt": [{"TagInt": []}, []]}]}]}]}]]}]}],
$       [{"Name": "orderWeights"},
$        {"DomainFunction":
$             [{"Function_1D": []},
$              [{"SizeAttr_Size":
$                    {"Reference":
$                         [{"MachineName": ["fin", 1, []]},
$                          {"DeclHasRepr":
$                               ["Given", {"MachineName": ["fin", 1, []]}, {"DomainInt": [{"TagInt": []}, []]}]}]}},
$               "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "numberLocations"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "numberLocations"},
$                                       {"DomainInt":
$                                            [{"TagInt": []},
$                                             [{"RangeLowerBounded":
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"MachineName": ["fin", 2, []]},
$                                 {"DeclHasRepr":
$                                      ["Given", {"MachineName": ["fin", 2, []]},
$                                       {"DomainInt": [{"TagInt": []}, []]}]}]}]}]]}]}],
$       [{"Name": "vehicleCapacity"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "optVar"},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                     {"Reference":
$                          [{"Name": "maxTotalCost"},
$                           {"Alias":
$                                {"Op":
$                                     {"MkOpProduct":
$                                          {"AbstractLiteral":
$                                               {"AbsLitMatrix":
$                                                    [{"DomainInt":
$                                                          [{"TagInt": []},
$                                                           [{"RangeBounded":
$                                                                 [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                  {"Constant":
$                                                                       {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
$                                                     [{"Op":
$                                                           {"MkOpSum":
$                                                                {"Comprehension":
$                                                                     [{"Op":
$                                                                           {"MkOpImage":
$                                                                                [{"Reference":
$                                                                                      [{"Name": "costs"},
$                                                                                       {"DeclHasRepr":
$                                                                                            ["Given", {"Name": "costs"},
$                                                                                             {"DomainFunction":
$                                                                                                  [{"Function_ND": []},
$                                                                                                   [{"SizeAttr_Size":
$                                                                                                         {"Reference":
$                                                                                                              [{"MachineName":
$                                                                                                                    ["fin",
$                                                                                                                     3,
$                                                                                                                     []]},
$                                                                                                               {"DeclHasRepr":
$                                                                                                                    ["Given",
$                                                                                                                     {"MachineName":
$                                                                                                                          ["fin",
$                                                                                                                           3,
$                                                                                                                           []]},
$                                                                                                                     {"DomainInt":
$                                                                                                                          [{"TagInt":
$                                                                                                                                []},
$                                                                                                                           []]}]}]}},
$                                                                                                    "PartialityAttr_Total",
$                                                                                                    "JectivityAttr_None"],
$                                                                                                   {"DomainTuple":
$                                                                                                        [{"DomainInt":
$                                                                                                              [{"TagInt":
$                                                                                                                    []},
$                                                                                                               [{"RangeBounded":
$                                                                                                                     [{"Constant":
$                                                                                                                           {"ConstantInt":
$                                                                                                                                [{"TagInt":
$                                                                                                                                      []},
$                                                                                                                                 0]}},
$                                                                                                                      {"Reference":
$                                                                                                                           [{"Name":
$                                                                                                                                 "numberLocations"},
$                                                                                                                            {"DeclHasRepr":
$                                                                                                                                 ["Given",
$                                                                                                                                  {"Name":
$                                                                                                                                       "numberLocations"},
$                                                                                                                                  {"DomainInt":
$                                                                                                                                       [{"TagInt":
$                                                                                                                                             []},
$                                                                                                                                        [{"RangeLowerBounded":
$                                                                                                                                              {"Constant":
$                                                                                                                                                   {"ConstantInt":
$                                                                                                                                                        [{"TagInt":
$                                                                                                                                                              []},
$                                                                                                                                                         1]}}}]]}]}]}]}]]},
$                                                                                                         {"DomainInt":
$                                                                                                              [{"TagInt":
$                                                                                                                    []},
$                                                                                                               [{"RangeBounded":
$                                                                                                                     [{"Constant":
$                                                                                                                           {"ConstantInt":
$                                                                                                                                [{"TagInt":
$                                                                                                                                      []},
$                                                                                                                                 0]}},
$                                                                                                                      {"Reference":
$                                                                                                                           [{"Name":
$                                                                                                                                 "numberLocations"},
$                                                                                                                            {"DeclHasRepr":
$                                                                                                                                 ["Given",
$                                                                                                                                  {"Name":
$                                                                                                                                       "numberLocations"},
$                                                                                                                                  {"DomainInt":
$                                                                                                                                       [{"TagInt":
$                                                                                                                                             []},
$                                                                                                                                        [{"RangeLowerBounded":
$                                                                                                                                              {"Constant":
$                                                                                                                                                   {"ConstantInt":
$                                                                                                                                                        [{"TagInt":
$                                                                                                                                                              []},
$                                                                                                                                                         1]}}}]]}]}]}]}]]}]},
$                                                                                                   {"DomainInt":
$                                                                                                        [{"TagInt": []},
$                                                                                                         [{"RangeBounded":
$                                                                                                               [{"Constant":
$                                                                                                                     {"ConstantInt":
$                                                                                                                          [{"TagInt":
$                                                                                                                                []},
$                                                                                                                           0]}},
$                                                                                                                {"Reference":
$                                                                                                                     [{"MachineName":
$                                                                                                                           ["fin",
$                                                                                                                            4,
$                                                                                                                            []]},
$                                                                                                                      {"DeclHasRepr":
$                                                                                                                           ["Given",
$                                                                                                                            {"MachineName":
$                                                                                                                                 ["fin",
$                                                                                                                                  4,
$                                                                                                                                  []]},
$                                                                                                                            {"DomainInt":
$                                                                                                                                 [{"TagInt":
$                                                                                                                                       []},
$                                                                                                                                  []]}]}]}]}]]}]}]}]},
$                                                                                 {"AbstractLiteral":
$                                                                                      {"AbsLitTuple":
$                                                                                           [{"Constant":
$                                                                                                 {"ConstantInt":
$                                                                                                      [{"TagInt": []},
$                                                                                                       0]}},
$                                                                                            {"Reference":
$                                                                                                 [{"Name": "i"},
$                                                                                                  {"DeclHasRepr":
$                                                                                                       ["Quantified",
$                                                                                                        {"Name": "i"},
$                                                                                                        {"DomainInt":
$                                                                                                             [{"TagInt":
$                                                                                                                   []},
$                                                                                                              [{"RangeBounded":
$                                                                                                                    [{"Constant":
$                                                                                                                          {"ConstantInt":
$                                                                                                                               [{"TagInt":
$                                                                                                                                     []},
$                                                                                                                                1]}},
$                                                                                                                     {"Reference":
$                                                                                                                          [{"Name":
$                                                                                                                                "numberLocations"},
$                                                                                                                           {"DeclHasRepr":
$                                                                                                                                ["Given",
$                                                                                                                                 {"Name":
$                                                                                                                                      "numberLocations"},
$                                                                                                                                 {"DomainInt":
$                                                                                                                                      [{"TagInt":
$                                                                                                                                            []},
$                                                                                                                                       [{"RangeLowerBounded":
$                                                                                                                                             {"Constant":
$                                                                                                                                                  {"ConstantInt":
$                                                                                                                                                       [{"TagInt":
$                                                                                                                                                             []},
$                                                                                                                                                        1]}}}]]}]}]}]}]]}]}]}]}}]}},
$                                                                      [{"Generator":
$                                                                            {"GenDomainHasRepr":
$                                                                                 [{"Name": "i"},
$                                                                                  {"DomainInt":
$                                                                                       [{"TagInt": []},
$                                                                                        [{"RangeBounded":
$                                                                                              [{"Constant":
$                                                                                                    {"ConstantInt":
$                                                                                                         [{"TagInt": []},
$                                                                                                          1]}},
$                                                                                               {"Reference":
$                                                                                                    [{"Name":
$                                                                                                          "numberLocations"},
$                                                                                                     {"DeclHasRepr":
$                                                                                                          ["Given",
$                                                                                                           {"Name":
$                                                                                                                "numberLocations"},
$                                                                                                           {"DomainInt":
$                                                                                                                [{"TagInt":
$                                                                                                                      []},
$                                                                                                                 [{"RangeLowerBounded":
$                                                                                                                       {"Constant":
$                                                                                                                            {"ConstantInt":
$                                                                                                                                 [{"TagInt":
$                                                                                                                                       []},
$                                                                                                                                  1]}}}]]}]}]}]}]]}]}}]]}}},
$                                                      {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]]}}}}}]}]}]]}],
$       [{"Name": "plan"},
$        {"DomainSet":
$             [{"Set_ExplicitVarSizeWithMarker": []},
$              {"SizeAttr_MinMaxSize":
$                   [{"Reference":
$                         [{"Name": "minVehicles"},
$                          {"Alias":
$                               {"Op":
$                                    {"MkOpSum":
$                                         {"AbstractLiteral":
$                                              {"AbsLitMatrix":
$                                                   [{"DomainInt":
$                                                         [{"TagInt": []},
$                                                          [{"RangeBounded":
$                                                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
$                                                    [{"Op":
$                                                          {"MkOpDiv":
$                                                               [{"Reference":
$                                                                     [{"Name": "totalOrderWeight"},
$                                                                      {"Alias":
$                                                                           {"Op":
$                                                                                {"MkOpSum":
$                                                                                     {"Comprehension":
$                                                                                          [{"Reference":
$                                                                                                [{"Name": "weight"},
$                                                                                                 {"InComprehension":
$                                                                                                      {"GenInExpr":
$                                                                                                           [{"AbsPatTuple":
$                                                                                                                 [{"Single":
$                                                                                                                       {"Name":
$                                                                                                                            "_"}},
$                                                                                                                  {"Single":
$                                                                                                                       {"Name":
$                                                                                                                            "weight"}}]},
$                                                                                                            {"Reference":
$                                                                                                                 [{"Name":
$                                                                                                                       "orderWeights"},
$                                                                                                                  {"DeclHasRepr":
$                                                                                                                       ["Given",
$                                                                                                                        {"Name":
$                                                                                                                             "orderWeights"},
$                                                                                                                        {"DomainFunction":
$                                                                                                                             [{"Function_1D":
$                                                                                                                                   []},
$                                                                                                                              [{"SizeAttr_Size":
$                                                                                                                                    {"Reference":
$                                                                                                                                         [{"MachineName":
$                                                                                                                                               ["fin",
$                                                                                                                                                1,
$                                                                                                                                                []]},
$                                                                                                                                          {"DeclHasRepr":
$                                                                                                                                               ["Given",
$                                                                                                                                                {"MachineName":
$                                                                                                                                                     ["fin",
$                                                                                                                                                      1,
$                                                                                                                                                      []]},
$                                                                                                                                                {"DomainInt":
$                                                                                                                                                     [{"TagInt":
$                                                                                                                                                           []},
$                                                                                                                                                      []]}]}]}},
$                                                                                                                               "PartialityAttr_Total",
$                                                                                                                               "JectivityAttr_None"],
$                                                                                                                              {"DomainInt":
$                                                                                                                                   [{"TagInt":
$                                                                                                                                         []},
$                                                                                                                                    [{"RangeBounded":
$                                                                                                                                          [{"Constant":
$                                                                                                                                                {"ConstantInt":
$                                                                                                                                                     [{"TagInt":
$                                                                                                                                                           []},
$                                                                                                                                                      1]}},
$                                                                                                                                           {"Reference":
$                                                                                                                                                [{"Name":
$                                                                                                                                                      "numberLocations"},
$                                                                                                                                                 {"DeclHasRepr":
$                                                                                                                                                      ["Given",
$                                                                                                                                                       {"Name":
$                                                                                                                                                            "numberLocations"},
$                                                                                                                                                       {"DomainInt":
$                                                                                                                                                            [{"TagInt":
$                                                                                                                                                                  []},
$                                                                                                                                                             [{"RangeLowerBounded":
$                                                                                                                                                                   {"Constant":
$                                                                                                                                                                        {"ConstantInt":
$                                                                                                                                                                             [{"TagInt":
$                                                                                                                                                                                   []},
$                                                                                                                                                                              1]}}}]]}]}]}]}]]},
$                                                                                                                              {"DomainInt":
$                                                                                                                                   [{"TagInt":
$                                                                                                                                         []},
$                                                                                                                                    [{"RangeBounded":
$                                                                                                                                          [{"Constant":
$                                                                                                                                                {"ConstantInt":
$                                                                                                                                                     [{"TagInt":
$                                                                                                                                                           []},
$                                                                                                                                                      1]}},
$                                                                                                                                           {"Reference":
$                                                                                                                                                [{"MachineName":
$                                                                                                                                                      ["fin",
$                                                                                                                                                       2,
$                                                                                                                                                       []]},
$                                                                                                                                                 {"DeclHasRepr":
$                                                                                                                                                      ["Given",
$                                                                                                                                                       {"MachineName":
$                                                                                                                                                            ["fin",
$                                                                                                                                                             2,
$                                                                                                                                                             []]},
$                                                                                                                                                       {"DomainInt":
$                                                                                                                                                            [{"TagInt":
$                                                                                                                                                                  []},
$                                                                                                                                                             []]}]}]}]}]]}]}]}]}]}}]},
$                                                                                           [{"Generator":
$                                                                                                 {"GenInExpr":
$                                                                                                      [{"AbsPatTuple":
$                                                                                                            [{"Single":
$                                                                                                                  {"Name":
$                                                                                                                       "_"}},
$                                                                                                             {"Single":
$                                                                                                                  {"Name":
$                                                                                                                       "weight"}}]},
$                                                                                                       {"Reference":
$                                                                                                            [{"Name":
$                                                                                                                  "orderWeights"},
$                                                                                                             {"DeclHasRepr":
$                                                                                                                  ["Given",
$                                                                                                                   {"Name":
$                                                                                                                        "orderWeights"},
$                                                                                                                   {"DomainFunction":
$                                                                                                                        [{"Function_1D":
$                                                                                                                              []},
$                                                                                                                         [{"SizeAttr_Size":
$                                                                                                                               {"Reference":
$                                                                                                                                    [{"MachineName":
$                                                                                                                                          ["fin",
$                                                                                                                                           1,
$                                                                                                                                           []]},
$                                                                                                                                     {"DeclHasRepr":
$                                                                                                                                          ["Given",
$                                                                                                                                           {"MachineName":
$                                                                                                                                                ["fin",
$                                                                                                                                                 1,
$                                                                                                                                                 []]},
$                                                                                                                                           {"DomainInt":
$                                                                                                                                                [{"TagInt":
$                                                                                                                                                      []},
$                                                                                                                                                 []]}]}]}},
$                                                                                                                          "PartialityAttr_Total",
$                                                                                                                          "JectivityAttr_None"],
$                                                                                                                         {"DomainInt":
$                                                                                                                              [{"TagInt":
$                                                                                                                                    []},
$                                                                                                                               [{"RangeBounded":
$                                                                                                                                     [{"Constant":
$                                                                                                                                           {"ConstantInt":
$                                                                                                                                                [{"TagInt":
$                                                                                                                                                      []},
$                                                                                                                                                 1]}},
$                                                                                                                                      {"Reference":
$                                                                                                                                           [{"Name":
$                                                                                                                                                 "numberLocations"},
$                                                                                                                                            {"DeclHasRepr":
$                                                                                                                                                 ["Given",
$                                                                                                                                                  {"Name":
$                                                                                                                                                       "numberLocations"},
$                                                                                                                                                  {"DomainInt":
$                                                                                                                                                       [{"TagInt":
$                                                                                                                                                             []},
$                                                                                                                                                        [{"RangeLowerBounded":
$                                                                                                                                                              {"Constant":
$                                                                                                                                                                   {"ConstantInt":
$                                                                                                                                                                        [{"TagInt":
$                                                                                                                                                                              []},
$                                                                                                                                                                         1]}}}]]}]}]}]}]]},
$                                                                                                                         {"DomainInt":
$                                                                                                                              [{"TagInt":
$                                                                                                                                    []},
$                                                                                                                               [{"RangeBounded":
$                                                                                                                                     [{"Constant":
$                                                                                                                                           {"ConstantInt":
$                                                                                                                                                [{"TagInt":
$                                                                                                                                                      []},
$                                                                                                                                                 1]}},
$                                                                                                                                      {"Reference":
$                                                                                                                                           [{"MachineName":
$                                                                                                                                                 ["fin",
$                                                                                                                                                  2,
$                                                                                                                                                  []]},
$                                                                                                                                            {"DeclHasRepr":
$                                                                                                                                                 ["Given",
$                                                                                                                                                  {"MachineName":
$                                                                                                                                                       ["fin",
$                                                                                                                                                        2,
$                                                                                                                                                        []]},
$                                                                                                                                                  {"DomainInt":
$                                                                                                                                                       [{"TagInt":
$                                                                                                                                                             []},
$                                                                                                                                                        []]}]}]}]}]]}]}]}]}]}}]]}}}}]},
$                                                                {"Reference":
$                                                                     [{"Name": "vehicleCapacity"},
$                                                                      {"DeclHasRepr":
$                                                                           ["Given", {"Name": "vehicleCapacity"},
$                                                                            {"DomainInt":
$                                                                                 [{"TagInt": []},
$                                                                                  [{"RangeLowerBounded":
$                                                                                        {"Constant":
$                                                                                             {"ConstantInt":
$                                                                                                  [{"TagInt": []},
$                                                                                                   1]}}}]]}]}]}]}},
$                                                     {"Op":
$                                                          {"MkOpToInt":
$                                                               {"Op":
$                                                                    {"MkOpNeq":
$                                                                         [{"Op":
$                                                                               {"MkOpMod":
$                                                                                    [{"Reference":
$                                                                                          [{"Name": "totalOrderWeight"},
$                                                                                           {"Alias":
$                                                                                                {"Op":
$                                                                                                     {"MkOpSum":
$                                                                                                          {"Comprehension":
$                                                                                                               [{"Reference":
$                                                                                                                     [{"Name":
$                                                                                                                           "weight"},
$                                                                                                                      {"InComprehension":
$                                                                                                                           {"GenInExpr":
$                                                                                                                                [{"AbsPatTuple":
$                                                                                                                                      [{"Single":
$                                                                                                                                            {"Name":
$                                                                                                                                                 "_"}},
$                                                                                                                                       {"Single":
$                                                                                                                                            {"Name":
$                                                                                                                                                 "weight"}}]},
$                                                                                                                                 {"Reference":
$                                                                                                                                      [{"Name":
$                                                                                                                                            "orderWeights"},
$                                                                                                                                       {"DeclHasRepr":
$                                                                                                                                            ["Given",
$                                                                                                                                             {"Name":
$                                                                                                                                                  "orderWeights"},
$                                                                                                                                             {"DomainFunction":
$                                                                                                                                                  [{"Function_1D":
$                                                                                                                                                        []},
$                                                                                                                                                   [{"SizeAttr_Size":
$                                                                                                                                                         {"Reference":
$                                                                                                                                                              [{"MachineName":
$                                                                                                                                                                    ["fin",
$                                                                                                                                                                     1,
$                                                                                                                                                                     []]},
$                                                                                                                                                               {"DeclHasRepr":
$                                                                                                                                                                    ["Given",
$                                                                                                                                                                     {"MachineName":
$                                                                                                                                                                          ["fin",
$                                                                                                                                                                           1,
$                                                                                                                                                                           []]},
$                                                                                                                                                                     {"DomainInt":
$                                                                                                                                                                          [{"TagInt":
$                                                                                                                                                                                []},
$                                                                                                                                                                           []]}]}]}},
$                                                                                                                                                    "PartialityAttr_Total",
$                                                                                                                                                    "JectivityAttr_None"],
$                                                                                                                                                   {"DomainInt":
$                                                                                                                                                        [{"TagInt":
$                                                                                                                                                              []},
$                                                                                                                                                         [{"RangeBounded":
$                                                                                                                                                               [{"Constant":
$                                                                                                                                                                     {"ConstantInt":
$                                                                                                                                                                          [{"TagInt":
$                                                                                                                                                                                []},
$                                                                                                                                                                           1]}},
$                                                                                                                                                                {"Reference":
$                                                                                                                                                                     [{"Name":
$                                                                                                                                                                           "numberLocations"},
$                                                                                                                                                                      {"DeclHasRepr":
$                                                                                                                                                                           ["Given",
$                                                                                                                                                                            {"Name":
$                                                                                                                                                                                 "numberLocations"},
$                                                                                                                                                                            {"DomainInt":
$                                                                                                                                                                                 [{"TagInt":
$                                                                                                                                                                                       []},
$                                                                                                                                                                                  [{"RangeLowerBounded":
$                                                                                                                                                                                        {"Constant":
$                                                                                                                                                                                             {"ConstantInt":
$                                                                                                                                                                                                  [{"TagInt":
$                                                                                                                                                                                                        []},
$                                                                                                                                                                                                   1]}}}]]}]}]}]}]]},
$                                                                                                                                                   {"DomainInt":
$                                                                                                                                                        [{"TagInt":
$                                                                                                                                                              []},
$                                                                                                                                                         [{"RangeBounded":
$                                                                                                                                                               [{"Constant":
$                                                                                                                                                                     {"ConstantInt":
$                                                                                                                                                                          [{"TagInt":
$                                                                                                                                                                                []},
$                                                                                                                                                                           1]}},
$                                                                                                                                                                {"Reference":
$                                                                                                                                                                     [{"MachineName":
$                                                                                                                                                                           ["fin",
$                                                                                                                                                                            2,
$                                                                                                                                                                            []]},
$                                                                                                                                                                      {"DeclHasRepr":
$                                                                                                                                                                           ["Given",
$                                                                                                                                                                            {"MachineName":
$                                                                                                                                                                                 ["fin",
$                                                                                                                                                                                  2,
$                                                                                                                                                                                  []]},
$                                                                                                                                                                            {"DomainInt":
$                                                                                                                                                                                 [{"TagInt":
$                                                                                                                                                                                       []},
$                                                                                                                                                                                  []]}]}]}]}]]}]}]}]}]}}]},
$                                                                                                                [{"Generator":
$                                                                                                                      {"GenInExpr":
$                                                                                                                           [{"AbsPatTuple":
$                                                                                                                                 [{"Single":
$                                                                                                                                       {"Name":
$                                                                                                                                            "_"}},
$                                                                                                                                  {"Single":
$                                                                                                                                       {"Name":
$                                                                                                                                            "weight"}}]},
$                                                                                                                            {"Reference":
$                                                                                                                                 [{"Name":
$                                                                                                                                       "orderWeights"},
$                                                                                                                                  {"DeclHasRepr":
$                                                                                                                                       ["Given",
$                                                                                                                                        {"Name":
$                                                                                                                                             "orderWeights"},
$                                                                                                                                        {"DomainFunction":
$                                                                                                                                             [{"Function_1D":
$                                                                                                                                                   []},
$                                                                                                                                              [{"SizeAttr_Size":
$                                                                                                                                                    {"Reference":
$                                                                                                                                                         [{"MachineName":
$                                                                                                                                                               ["fin",
$                                                                                                                                                                1,
$                                                                                                                                                                []]},
$                                                                                                                                                          {"DeclHasRepr":
$                                                                                                                                                               ["Given",
$                                                                                                                                                                {"MachineName":
$                                                                                                                                                                     ["fin",
$                                                                                                                                                                      1,
$                                                                                                                                                                      []]},
$                                                                                                                                                                {"DomainInt":
$                                                                                                                                                                     [{"TagInt":
$                                                                                                                                                                           []},
$                                                                                                                                                                      []]}]}]}},
$                                                                                                                                               "PartialityAttr_Total",
$                                                                                                                                               "JectivityAttr_None"],
$                                                                                                                                              {"DomainInt":
$                                                                                                                                                   [{"TagInt":
$                                                                                                                                                         []},
$                                                                                                                                                    [{"RangeBounded":
$                                                                                                                                                          [{"Constant":
$                                                                                                                                                                {"ConstantInt":
$                                                                                                                                                                     [{"TagInt":
$                                                                                                                                                                           []},
$                                                                                                                                                                      1]}},
$                                                                                                                                                           {"Reference":
$                                                                                                                                                                [{"Name":
$                                                                                                                                                                      "numberLocations"},
$                                                                                                                                                                 {"DeclHasRepr":
$                                                                                                                                                                      ["Given",
$                                                                                                                                                                       {"Name":
$                                                                                                                                                                            "numberLocations"},
$                                                                                                                                                                       {"DomainInt":
$                                                                                                                                                                            [{"TagInt":
$                                                                                                                                                                                  []},
$                                                                                                                                                                             [{"RangeLowerBounded":
$                                                                                                                                                                                   {"Constant":
$                                                                                                                                                                                        {"ConstantInt":
$                                                                                                                                                                                             [{"TagInt":
$                                                                                                                                                                                                   []},
$                                                                                                                                                                                              1]}}}]]}]}]}]}]]},
$                                                                                                                                              {"DomainInt":
$                                                                                                                                                   [{"TagInt":
$                                                                                                                                                         []},
$                                                                                                                                                    [{"RangeBounded":
$                                                                                                                                                          [{"Constant":
$                                                                                                                                                                {"ConstantInt":
$                                                                                                                                                                     [{"TagInt":
$                                                                                                                                                                           []},
$                                                                                                                                                                      1]}},
$                                                                                                                                                           {"Reference":
$                                                                                                                                                                [{"MachineName":
$                                                                                                                                                                      ["fin",
$                                                                                                                                                                       2,
$                                                                                                                                                                       []]},
$                                                                                                                                                                 {"DeclHasRepr":
$                                                                                                                                                                      ["Given",
$                                                                                                                                                                       {"MachineName":
$                                                                                                                                                                            ["fin",
$                                                                                                                                                                             2,
$                                                                                                                                                                             []]},
$                                                                                                                                                                       {"DomainInt":
$                                                                                                                                                                            [{"TagInt":
$                                                                                                                                                                                  []},
$                                                                                                                                                                             []]}]}]}]}]]}]}]}]}]}}]]}}}}]},
$                                                                                     {"Reference":
$                                                                                          [{"Name": "vehicleCapacity"},
$                                                                                           {"DeclHasRepr":
$                                                                                                ["Given",
$                                                                                                 {"Name":
$                                                                                                      "vehicleCapacity"},
$                                                                                                 {"DomainInt":
$                                                                                                      [{"TagInt": []},
$                                                                                                       [{"RangeLowerBounded":
$                                                                                                             {"Constant":
$                                                                                                                  {"ConstantInt":
$                                                                                                                       [{"TagInt":
$                                                                                                                             []},
$                                                                                                                        1]}}}]]}]}]}]}},
$                                                                          {"Constant":
$                                                                               {"ConstantInt":
$                                                                                    [{"TagInt": []}, 0]}}]}}}}]]}}}}}]},
$                    {"Reference":
$                         [{"Name": "numberLocations"},
$                          {"DeclHasRepr":
$                               ["Given", {"Name": "numberLocations"},
$                                {"DomainInt":
$                                     [{"TagInt": []},
$                                      [{"RangeLowerBounded":
$                                            {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]},
$              {"DomainSequence":
$                   [{"Sequence_ExplicitBounded": []},
$                    [{"SizeAttr_MinMaxSize":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "numberLocations"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "numberLocations"},
$                                       {"DomainInt":
$                                            [{"TagInt": []},
$                                             [{"RangeLowerBounded":
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]},
$                     "JectivityAttr_Injective"],
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "numberLocations"},
$                                       {"DeclHasRepr":
$                                            ["Given", {"Name": "numberLocations"},
$                                             {"DomainInt":
$                                                  [{"TagInt": []},
$                                                   [{"RangeLowerBounded":
$                                                         {"Constant":
$                                                              {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]}]}],
$       [{"Name": "size"},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Reference":
$                          [{"Name": "numberLocations"},
$                           {"DeclHasRepr":
$                                ["Given", {"Name": "numberLocations"},
$                                 {"DomainInt":
$                                      [{"TagInt": []},
$                                       [{"RangeLowerBounded":
$                                             {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}],
$       [{"MachineName": ["conjure_aux", 9, []]},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Reference":
$                          [{"Name": "numberLocations"},
$                           {"DeclHasRepr":
$                                ["Given", {"Name": "numberLocations"},
$                                 {"DomainInt":
$                                      [{"TagInt": []},
$                                       [{"RangeLowerBounded":
$                                             {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}],
$       [{"MachineName": ["conjure_aux", 8, []]},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Reference":
$                          [{"Name": "numberLocations"},
$                           {"DeclHasRepr":
$                                ["Given", {"Name": "numberLocations"},
$                                 {"DomainInt":
$                                      [{"TagInt": []},
$                                       [{"RangeLowerBounded":
$                                             {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}],
$       [{"MachineName": ["conjure_aux", 6, []]},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Reference":
$                          [{"Name": "numberLocations"},
$                           {"DeclHasRepr":
$                                ["Given", {"Name": "numberLocations"},
$                                 {"DomainInt":
$                                      [{"TagInt": []},
$                                       [{"RangeLowerBounded":
$                                             {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}],
$       [{"MachineName": ["conjure_aux", 5, []]},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Reference":
$                          [{"Name": "numberLocations"},
$                           {"DeclHasRepr":
$                                ["Given", {"Name": "numberLocations"},
$                                 {"DomainInt":
$                                      [{"TagInt": []},
$                                       [{"RangeLowerBounded":
$                                             {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}],
$       [{"MachineName": ["conjure_aux", 7, []]},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Reference":
$                          [{"Name": "numberLocations"},
$                           {"DeclHasRepr":
$                                ["Given", {"Name": "numberLocations"},
$                                 {"DomainInt":
$                                      [{"TagInt": []},
$                                       [{"RangeLowerBounded":
$                                             {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}],
$       [{"MachineName": ["conjure_aux", 4, []]},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Reference":
$                          [{"Name": "numberLocations"},
$                           {"DeclHasRepr":
$                                ["Given", {"Name": "numberLocations"},
$                                 {"DomainInt":
$                                      [{"TagInt": []},
$                                       [{"RangeLowerBounded":
$                                             {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}],
$       [{"MachineName": ["conjure_aux", 3, []]},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Reference":
$                          [{"Name": "numberLocations"},
$                           {"DeclHasRepr":
$                                ["Given", {"Name": "numberLocations"},
$                                 {"DomainInt":
$                                      [{"TagInt": []},
$                                       [{"RangeLowerBounded":
$                                             {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]],
$  "representationsTree":
$      [[{"MachineName": ["conjure_aux", 3, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"MachineName": ["conjure_aux", 4, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"MachineName": ["conjure_aux", 5, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"MachineName": ["conjure_aux", 6, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"MachineName": ["conjure_aux", 7, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"MachineName": ["conjure_aux", 8, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"MachineName": ["conjure_aux", 9, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"Name": "costs"},
$        [{"rootLabel": {"Function_ND": []},
$          "subForest":
$              [{"rootLabel": null,
$                "subForest":
$                    [{"rootLabel": null,
$                      "subForest": []},
$                     {"rootLabel": null,
$                      "subForest": []}]},
$               {"rootLabel": null,
$                "subForest": []}]}]],
$       [{"MachineName": ["fin", 1, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"MachineName": ["fin", 2, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"MachineName": ["fin", 3, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"MachineName": ["fin", 4, []]},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"Name": "numberLocations"},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"Name": "optVar"},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"Name": "orderWeights"},
$        [{"rootLabel": {"Function_1D": []},
$          "subForest":
$              [{"rootLabel": null,
$                "subForest": []},
$               {"rootLabel": null,
$                "subForest": []}]}]],
$       [{"Name": "plan"},
$        [{"rootLabel": {"Set_ExplicitVarSizeWithMarker": []},
$          "subForest":
$              [{"rootLabel": {"Sequence_ExplicitBounded": []},
$                "subForest":
$                    [{"rootLabel": null,
$                      "subForest": []}]}]}]],
$       [{"Name": "size"},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"Name": "vehicleCapacity"},
$        [{"rootLabel": null,
$          "subForest": []}]]],
$  "originalDomains":
$      [[{"Name": "numberLocations"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "orderWeights"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "numberLocations"}, null]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}],
$       [{"Name": "costs"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainTuple":
$                   [{"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Reference": [{"Name": "numberLocations"}, null]}]}]]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Reference": [{"Name": "numberLocations"}, null]}]}]]}]},
$              {"DomainInt":
$                   [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 0]}}}]]}]}],
$       [{"Name": "vehicleCapacity"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "plan"},
$        {"DomainSet":
$             [[],
$              {"SizeAttr_MinMaxSize":
$                   [{"Reference": [{"Name": "minVehicles"}, null]}, {"Reference": [{"Name": "numberLocations"}, null]}]},
$              {"DomainSequence":
$                   [[],
$                    [{"SizeAttr_MinMaxSize":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "numberLocations"}, null]}]},
$                     "JectivityAttr_Injective"],
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference": [{"Name": "numberLocations"}, null]}]}]]}]}]}],
$       [{"Name": "optVar"},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                     {"Reference": [{"Name": "maxTotalCost"}, null]}]}]]}]],
$  "questionAnswered": []}
